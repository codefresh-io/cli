[
{
	"uri": "https://codefresh-io.github.io/cli/",
	"title": "",
	"tags": [],
	"description": "Codefresh CLI",
	"content": " Codefresh CLI Welcome to Codefresh official CLI documentation!\nThe Codefresh CLI provides a full and flexible interface to interact with Codefresh.\nThe CLI can be used to achieve the following:  Perform any operation you would be able to do through the UI. Create complex automation from your local machine. Run complex pipeline use cases by using the CLI inside your pipeline steps. \nTo get started please navigate to the Getting started page.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-create-pipeline-trigger/",
	"title": "[Deprecated] Create Pipeline Trigger",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Create trigger: link pipeline to trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\nCommand codefresh create trigger [event-uri] [pipeline]\nAliases codefresh create t [event-uri] [pipeline]\nArguments    Option Alias Default Description     event-uri   trigger-event URI   pipeline   pipeline to be triggered by the trigger-event    Options    Option Alias Type Default Description     --help    Print help information   --filter  array  trigger filter name=condition pairs    Examples Create trigger by linking 5a43\u0026hellip; pipeline to the DockerHub codefresh/fortune push event codefresh create trigger registry:dockerhub:codefresh:fortune:push 5a439664af73ad0001f3ece0\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/config/",
	"title": "Config",
	"tags": [],
	"description": "",
	"content": " Config context stores a set of keys and values.\nType .spec.type should be config.\nData .spec.data should be an array of keys and values.\nExamples config with two keys apiVersion: \u0026#34;v1\u0026#34; kind: \u0026#34;context\u0026#34; owner: \u0026#34;account\u0026#34; metadata: name: \u0026#34;my-config-context\u0026#34; spec: type: \u0026#34;config\u0026#34; data: dbUrl: \u0026#34;db-url\u0026#34; sysUrl: \u0026#34;sys-url\u0026#34;"
},
{
	"uri": "https://codefresh-io.github.io/cli/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": " Install Install the CLI through one of the possible ways described in the Installation page.\nAuthenticate In order to start working with the cli you will need to update the authentication configuration. Updating the authentication configuration is done via an API-KEY you generate from Codefresh. If you already have an API-KEY you can just use it.\nYou can generate a new one from the user settings page. Once you have an API key, create a new authentication context:\ncodefresh auth create-context --api-key {API_KEY}\nGetting Help To get help and usage instructions run codefresh [COMMAND]--help.\nA help message will appear in the terminal.\nShowing Current Version Run codefresh version to see the current CLI version.\n\nThat\u0026rsquo;s it, you are good to go! "
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/npm/",
	"title": "NPM",
	"tags": [],
	"description": "asd",
	"content": "the CLI requires node version 8.0.0 or higher Codefresh\u0026rsquo;s CLI is available for installation through NPM registry.\nInstall: npm install -g codefresh\nInstall a specific version: npm install -g codefresh@{VERSION}\nUpdate to latest version: npm install -g codefresh\nUpdate to a specific version: npm install -g codefresh@${VERSION}\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/repository/add-repository/",
	"title": "Add Repository",
	"tags": [],
	"description": "",
	"content": " Description Add a repository from git context to codefresh.\nCommand codefresh add repository [fullname]\nAliases codefresh add repo [fullname]\nArguments    Option Alias Default Description     fullname   Full name of repo (template: \u0026ldquo;owner/repo\u0026rdquo;). required    Options    Option Alias Type Default Description     --help    Print help information   --context -c   Name of the git context to use, if not passed the default will be used    Examples Add repo \u0026ldquo;some-repo\u0026rdquo; of \u0026ldquo;codefresh-io\u0026rdquo; owner from default git context codefresh add repo codefresh-io/some-repo\nAdd repo \u0026ldquo;some-repo\u0026rdquo; of \u0026ldquo;codefresh-io\u0026rdquo; owner from git context \u0026ldquo;bitbucket\u0026rdquo; codefresh add repo codefresh-io/some-repo -c bitbucket\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-config-context/",
	"title": "Config",
	"tags": [],
	"description": "",
	"content": " Description Create a config context.\nCommand codefresh create context config \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of context    Options    Option Alias Type Default Description     --help    Print help information   --variable -v array  Variables list    Examples Create a config. codefresh create context config my-config -v key1=valu1 -v key2=value2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/tokens/create-tokens/",
	"title": "Create tokens",
	"tags": [],
	"description": "",
	"content": " Description Generate Codefresh token.\nCreate default token or provide --type and --subject. See options for more details.\nCommand codefresh create token [name]\nArguments    Option Alias Default Description     name   token name. required    Options    Option Alias Type Default Description     --help    Print help information   --subject    Name of the token subject   --type  string user Type of the subject\nPossible values:\n- runtime-environment\n- user   --scope -s array  user scopes    Examples Create token with default type codefresh create token some-token\nCreate token from runtime environment codefresh create token some-token --subject my-k8s-cluster/namespace --type runtime-environment\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/delete-helm-release/",
	"title": "Delete Helm Release",
	"tags": [],
	"description": "",
	"content": " Description Delete a helm release from a kubernetes cluster.\nCommand codefresh delete-release \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --help    Print help information   --cluster -c string  Run on cluster. required   --timeout -t number 300 time in seconds to wait for any individual kubernetes operation (like Jobs for hooks) (default 300)   --purge -p boolean false remove the release from the store and make its name free for later use (default true)   --detach -d   Run pipeline and print build ID   --no-hooks --nh boolean false prevent hooks from running during deletion   --tiller-namespace -n string kube-system namespace where is tiller running ( helm 2 only )   --namespace --ns string default namespace where is chart located ( helm 3 )    Examples Delete release \u0026ldquo;my-release\u0026rdquo; from cluster \u0026ldquo;my-cluster\u0026rdquo; codefresh delete-release my-release --cluster my-cluster\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/get/",
	"title": "Get",
	"tags": [],
	"description": "",
	"content": " Description Get a resource from a file, directory or url\nSupported resources:.\nCommand codefresh get\nOutput Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/workflow-data/get/",
	"title": "Get",
	"tags": [],
	"description": "",
	"content": " Description Get Workflow Data Item.\nPassing [id] argument will cause a retrieval of a specific Workflow-Data-Item.\nCommand codefresh get workflow-data-item [id..]\nAliases codefresh get wdi [id..]\nArguments    Option Alias Default Description     id   Workflow-Data-Item ID    Options    Option Alias Type Default Description     --help    Print help information   --workflow --wf   Workflow ID that the Workflow-Data-Item belongs to. required   --decrypt    When requesting spesific Workflow-Data-Item, decrypt the stored data    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all Workflow-Data-Items for given WORKFLOW_ID codefresh get workflow-data-item --workflow [WORKFLOW_ID]\nGet and decrypt WORKFLOW_DATA_ITEM_ID that is was reported to WORKFLOW_ID codefresh get workflow-data-item [WORKFLOW_DATA_ITEM_ID] --decrypt --workflow [WORKFLOW_ID]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/get-agents/",
	"title": "Get Agents",
	"tags": [],
	"description": "",
	"content": " Description Get a specific agent or an array of agents.\nCommand codefresh get agents [id|name]\nAliases codefresh get agent [id|name]\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information   --name -n   Agent name to filter by    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/boards/get-board/",
	"title": "Get Board",
	"tags": [],
	"description": "",
	"content": " Description Get a specific board or an array of boards.\nCommand codefresh get boards [id..]\nAliases codefresh get board [id..]\nOptions    Option Alias Type Default Description     --help    Print help information   --id    Board by id   --name    Board by name    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/get-build/",
	"title": "Get Build",
	"tags": [],
	"description": "",
	"content": " Description Get a specific build or an array of builds.\nPassing [id] argument will cause a retrieval of a specific build.\nIn case of not passing [id] argument, a list will be returned.\nCommand codefresh get builds [id..]\nAliases codefresh get build [id..]\nArguments    Option Alias Default Description     id   Build id    Options    Option Alias Type Default Description     --help    Print help information   --limit -l number 25 Limit amount of returned results   --page -p number 1 Paginated page   --status -s array  Filter results by statuses\nPossible values:\n- running\n- success\n- error\n- terminated\n- terminating\n- pending-approval\n- delayed\n- pending\n- elected   --trigger -t array  Filter results by triggers\nPossible values:\n- build\n- launch-image\n- launch-composition   --pipeline-id --pid array  Filter results by pipeline id   --pipeline-name --pipeline array  Filter results by pipeline name   --branch -b array  Filter results by branch   --commit-id --revision,r,sha array  Filter results by commit revision sha   --pipeline-trigger-id  array  Filter results by pipeline trigger id   --from    Date in format: YYYY-MM-DD. Show builds from the provided date   --to    Date in format: YYYY-MM-DD. Show builds up to provided date    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get build ID codefresh get build ID\nGet all builds codefresh get builds\nGet all builds that are executions of pipeline \u0026ldquo;ID\u0026rdquo; codefresh get builds --pipeline-id ID\nGet all builds that are executions of pipelines that are named \u0026ldquo;NAME\u0026rdquo; codefresh get builds --pipeline-name NAME\nGet all builds that their status is error codefresh get builds --status=error\nGet all builds within given date range codefresh get builds --from=2020-01-01 --to=2020-02-01\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/clusters/get-clusters/",
	"title": "Get Clusters",
	"tags": [],
	"description": "",
	"content": " Description Get an array of clusters.\nCommand codefresh get clusters\nAliases codefresh get cluster clusters\nOptions    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all clusters codefresh get clusters\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/compositions/get-composition/",
	"title": "Get Composition",
	"tags": [],
	"description": "",
	"content": " Description Get a specific composition or an array of compositions.\nPassing [id|name] argument will cause a retrieval of a specific composition.\nIn case of not passing [id|name] argument, a list will be returned.\nCommand codefresh get compositions [id|name..]\nAliases codefresh get com [id|name..]\ncodefresh get composition [id|name..]\nArguments    Option Alias Default Description     id   composition id or name    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all compositions codefresh get compositions\nGet a specific composition codefresh get compositions NAME\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/get-context/",
	"title": "Get Context",
	"tags": [],
	"description": "",
	"content": " Description Get a specific context or an array of contexts.\nPassing [name] argument will cause a retrieval of a specific context.\nIn case of not passing [name] argument, a list will be returned.\nCommand codefresh get contexts [name..]\nAliases codefresh get ctx [name..]\ncodefresh get context [name..]\nArguments    Option Alias Default Description     name   context name    Options    Option Alias Type Default Description     --help    Print help information   --type    Context type\nPossible values:\n- config\n- git.bitbucket-server\n- git.bitbucket\n- git.github\n- git.gitlab\n- git.stash\n- helm-repository\n- secret-yaml\n- secret\n- storage.gc\n- storage.s3\n- yaml\n- secret-store.kubernetes\n- secret-store.kubernetes-runtime   --decrypt    Either to show decoded credentials or not   --prepare    Activate tokens in case its invalid    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get context NAME codefresh get context NAME\nGet all contexts codefresh get contexts\nGet all contexts with credentials decrypted codefresh get context --decrypt\nGet all secret contexts codefresh get context --type secret\nGet all git based contexts for github kind codefresh get context --type git.github\nGet all helm-repository contexts codefresh get context --type helm-repository\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/authentication/get-contexts/",
	"title": "Get Contexts",
	"tags": [],
	"description": "",
	"content": " Description Get all possible authentication contexts.\nCommand codefresh auth get-contexts\nOptions    Option Alias Type Default Description     --cfconfig    Custom path for authentication contexts config file (default: \u0026lsquo;/root/.cfconfig\u0026rsquo;)   --help    Print help information    Examples List all existing authentication contexts codefresh auth get-contexts\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/environments/get-environment/",
	"title": "Get Environment",
	"tags": [],
	"description": "",
	"content": " Description Get a specific environment or an array of environments.\nPassing [id] argument will cause a retrieval of a specific environment.\nIn case of not passing [id] argument, a list will be returned.\nCommand codefresh get environments [id..]\nAliases codefresh get env [id..]\ncodefresh get environment [id..]\nArguments    Option Alias Default Description     id   environment id or name    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get environment ID codefresh get environment ID\nGet all environments codefresh get environments\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/helm-repos/get-helm-repo/",
	"title": "Get Helm Repo",
	"tags": [],
	"description": "",
	"content": " Description Get a specific helm-repo or an array of helm-repos.\nCommand codefresh get helm-repo [name..]\nArguments    Option Alias Default Description     name   Helm repo name    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all helm repos codefresh get helm-repo\nGet a specific helm repo codefresh get helm-repo my-repo\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/images/get-image/",
	"title": "Get Image",
	"tags": [],
	"description": "",
	"content": " Description Get a specific image or an array of images.\nPassing [id] argument will cause a retrieval of a specific image.\nIn case of not passing [id] argument, a list will be returned.\nCommand codefresh get images [id..]\nAliases codefresh get img [id..]\ncodefresh get image [id..]\nArguments    Option Alias Default Description     id   Docker Image id    Options    Option Alias Type Default Description     --help    Print help information   --limit  number 25 Limit amount of returned results   --all -a boolean false Return images from all possible registries (by default only r.cfcr.io images will be returned)   --label -l array  Filter by a list of annotated labels   --tag -t array  Filter by a list of tags   --sha -s   Filter by specific commit sha   --image-name  array  Filter by specific image name   --branch  array  Filter by specific branch   --page  number 1 Paginated page    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get image ID codefresh get image ID\nGet all images codefresh get images\nGet all images that their name contains the word \u0026lsquo;node\u0026rsquo; codefresh get images --image-name node\nGet all images that are annotated with \u0026lsquo;value1\u0026rsquo; for \u0026lsquo;key1\u0026rsquo; codefresh get images -l key1=value1\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/pipelines/get-pipeline/",
	"title": "Get Pipeline",
	"tags": [],
	"description": "",
	"content": " Description Get a specific pipeline or an array of pipelines.\nCommand codefresh get pipelines [id..]\nAliases codefresh get pip [id..]\ncodefresh get pipeline [id..]\nArguments    Option Alias Default Description     id   Pipeline name/id    Options    Option Alias Type Default Description     --help    Print help information   --decrypt-variables -d   Will decrypt encrypted variables   --name    Filter pipelines by name   --project-id    Filter pipelines by project id   --project    Filter pipelines by project name   --label -l   Filter by a label - i.e tags=tag1,tag2   --limit    Limit amount of returned results [default: 25]   --all    Remove default limit of returned result   --page  number 1 Paginated page    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get specific pipeline by it name codefresh get pipeline --name PIPELINE_NAME\nGet list of pipelines by tag name codefresh get pip --label tags=tag1,tag2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/projects/get-projects/",
	"title": "Get Projects",
	"tags": [],
	"description": "",
	"content": " Description Get a specific project or an array of projects.\nCommand codefresh get projects [id|name]\nAliases codefresh get project [id|name]\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information   --name -n   Project name to filter by   --tag -t   Project tags array to filter by   --limit  number 25 Limit amount of returned results   --page  number 1 Paginated page    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/registries/get-registries/",
	"title": "Get Registries",
	"tags": [],
	"description": "",
	"content": " Description Get an array of accounts registries.\nCommand codefresh get registry\nOptions    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all registries connected to the account codefresh get registry\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments-base-images/get-runtime-environment-base-images/",
	"title": "Get Runtime-Environment-Base-Images",
	"tags": [],
	"description": "",
	"content": " Description Get a runtime environment base images list that required by this runtime.\nCommand codefresh get runtime-environment-base-images [name]\nAliases codefresh get re-base-images [name]\nArguments    Option Alias Default Description     name   Runtime environment name    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/get-runtime-environments/",
	"title": "Get Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description Get a runtime environments configuration.\nCommand codefresh get runtime-environments [name]\nAliases codefresh get re [name]\ncodefresh get runtime-environment [name]\nArguments    Option Alias Default Description     name   Runtime environments name    Options    Option Alias Type Default Description     --help    Print help information   --version    Runtime environments version   --history  boolean false Return all the history of the specific runtime environments   --limit  number 25 Limit amount of returned results   --page  number 1 Paginated page   --extend  boolean false Return an extend runtime environment    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/sections/get-section/",
	"title": "Get Section",
	"tags": [],
	"description": "",
	"content": " Description Get a specific section or an array of sections.\nCommand codefresh get sections [id]\nAliases codefresh get section [id]\nArguments    Option Alias Default Description     id   Section by id    Options    Option Alias Type Default Description     --help    Print help information   --board-id    Board id   --board-name    Board name   --name    Section by name    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/steps/get-step/",
	"title": "Get Step",
	"tags": [],
	"description": "",
	"content": " Description Get a specific step or an array of steps.\nCommand codefresh get step-types [id..]\nAliases codefresh get step-type [id..]\nArguments    Option Alias Default Description     id   Step name/id    Options    Option Alias Type Default Description     --help    Print help information   --name    Filter by name pattern   --free-text --text   Filter by multiple criteria: name, description, tags   --tag -t array  Filter by a tag   --category -c array  Filter by category   --stage    Filter by stage\nPossible values:\n- graduated\n- incubating   --official    Filter only official steps   --public    Filter only public steps   --private    Filter only private steps   --limit  number 25 Limit amount of returned results   --versions    Get only typed-step versions   --page  number 1 Paginated page    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/get-teams/",
	"title": "Get Teams",
	"tags": [],
	"description": "",
	"content": " Description Get an array of all current user teams.\nCommand codefresh get teams\nAliases codefresh get team teams\ncodefresh get tm teams\nOptions    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all teams for current account codefresh get teams\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-helm-repository-context/from-http-web-server/",
	"title": "HTTP",
	"tags": [],
	"description": "",
	"content": " Description Create a helm-repository context from HTTP server.\n\nA chart repository is an HTTP server that houses an index.yaml file and optionally some packaged charts.\nWhen you\u0026rsquo;re ready to share your charts, the preferred way to do so is by uploading them to a chart repository.\nRead more: https://github.com/kubernetes/helm/blob/master/docs/chart_repository.md.\nCommand codefresh create context helm-repository http \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --help    Print help information   --url    Url to the web server. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/rollback-helm-release/",
	"title": "Rollback Helm Release",
	"tags": [],
	"description": "",
	"content": " Description Rollback a helm release from a kubernetes cluster.\nCommand codefresh rollback-release \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --help    Print help information   --cluster -c string  Run on cluster. required   --revision -t number  revision number. required   --tiller-namespace -n string kube-system prevent hooks from running during deletion   --namespace --ns string default prevent hooks from running during deletion   --detach -d   Run pipeline and print build ID    Examples rollback release \u0026ldquo;my-release\u0026rdquo; from cluster \u0026ldquo;my-cluster\u0026rdquo; codefresh rollback my-release --cluster my-cluster --revision 1\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-get-trigger-event/",
	"title": "[Deprecated] Get Trigger Event",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Get trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\nCommand codefresh get trigger-events [event-uri]\nAliases codefresh get trigger-event [event-uri]\ncodefresh get te [event-uri]\nArguments    Option Alias Default Description     event-uri   trigger-event URI)    Options    Option Alias Type Default Description     --help    Print help information   --type    trigger-event type   --kind    trigger-event kind   --filter    trigger-event URI filter (regex)   --public  boolean true get public trigger-event(s)    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get DockerHub codefresh/fortune push trigger-event codefresh get trigger-event registry:dockerhub:codefresh:fortune:push\nGet all DockerHub codefresh/* push trigger-events codefresh get trigger-event --type registry --kind dockerhub --filter *codefresh\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-get-trigger-types/",
	"title": "[Deprecated] Get Trigger Types",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Get a list of available trigger-types. Deprecated - please use pipeline spec to manager cron trigger.\nCommand codefresh get trigger-types\nAliases codefresh get trigger-type trigger-types\ncodefresh get tt trigger-types\nOptions    Option Alias Type Default Description     --help    Print help information   --type    filter by a specific trigger type (e.g. registry, cron)   --kind    filter by a specific trigger kind (e.g. dockerhub, cfcr, gcr, acr); only some trigger-types may have kinds    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get Docker registry trigger types codefresh get trigger-types --type registry\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-get-triggers/",
	"title": "[Deprecated] Get Triggers",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Get triggers, optionally filtered by pipeline or event. Deprecated - please use pipeline spec to manager cron triggers.\nOnly cron/registry triggers are supported (for git triggers use codefresh get pip \u0026lt;pip-name\u0026gt; -o json).\nCommand codefresh get triggers\nAliases codefresh get trigger triggers\ncodefresh get t triggers\nOptions    Option Alias Type Default Description     --help    Print help information   --pipeline -p   pipeline id   --event-uri -e   event URI    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-git-context/bitbucket/",
	"title": "bitbucket",
	"tags": [],
	"description": "",
	"content": " Description Create a bitbucket context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create bitbucket context you need to generate application password from here: https://bitbucket.org/account/user/{YOUR-USERNAME}/app-passwords.\nCommand codefresh create context git bitbucket \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for git contexts\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --behind-firewall  boolean false Set to true to mark this context with behind firewall flag   --help    Print help information   --app-password -a   Application password generated in bitbucket. required   --username -u   username that has permissions to use application password. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/annotations/get/",
	"title": "get",
	"tags": [],
	"description": "",
	"content": " Description Get annotations.\nCommand codefresh get annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; [labels...]\nArguments    Option Alias Default Description     entity-type   Type of resource for annotation. required   entity-id   Id of resource for annotation. required   labels   Labels to filter by    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all annotations for entity codefresh get annotation image 2dfacdaad466\nGet specified annotations codefresh get annotation image 2dfacdaad466 coverage tests_passed\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-git-context/github/",
	"title": "github",
	"tags": [],
	"description": "",
	"content": " Description Create a github context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create Github context you need to generate the token here: https://github.com/settings/tokens.\nCommand codefresh create context git github \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for git contexts\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --behind-firewall  boolean false Set to true to mark this context with behind firewall flag   --help    Print help information   --access-token -t   Access token from to be used to clone repositories. required   --host -h string api.github.com Host name of your github (without protocol). required   --api-path-prefix -a string / Prefix of the api on the given host. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-git-context/gitlab/",
	"title": "gitlab",
	"tags": [],
	"description": "",
	"content": " Description Create a gitlab context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create gitlab context you need to generate the token here: https://gitlab.com/profile/personal_access_tokens.\nCommand codefresh create context git gitlab \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for git contexts\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --behind-firewall  boolean false Set to true to mark this context with behind firewall flag   --help    Print help information   --access-token -t   Access token from to be used to clone repositories. required   --api-url -a string https://gitlab.com/api/v4/ URL of the api. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-store-context/hashicorp-vault/",
	"title": "hashicorp-vault",
	"tags": [],
	"description": "",
	"content": " Description Create a Hashicorp Vault secret-store context.\nSecret-Store context are used during pipeline execution as API to resolve variables that are parse of Codefresh.\nCommand codefresh create context secret-store hashicorp-vault \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for secret-store context\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --help    Print help information   --behind-firewall  boolean false Set to true to mark this context with behind firewall flag   --api-url -a string  URL of the vault server. required   --login-path  string  Path for given auth method. Leave out to use the default path for the type.   --namespace -n string  Namespace is only valid for Vault Enterprise instances   --token -t string  Token   --username -u string  Username   --password -p string  Password   --role-id -r string  Role Id   --secret-id -s string  Secret Id   --gcp-role  string  GCP Role   --kubernetes-role  string  Kubernetes Role   --kubernetes-jwt  string  Kubernetes Role    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-store-context/kubernetes/",
	"title": "kubernetes",
	"tags": [],
	"description": "",
	"content": " Description Create a secret-store Kubernetes context.\nSecret-Store context are used during pipeline execution as API to resolve variables that are parse of Codefresh.\nCommand codefresh create context secret-store kubernetes \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for secret-store context\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --help    Print help information   --cluster    Name of the Kubernetes clsuter as it saved in Codefresh. required   --namespace  string default Name of the Kubernetes namespace. required   --resource-type    Type of the resource in Kubernetes. required\nPossible values:\n- secret\n- configmap   --resource-name    Name of the resource in Kubernetes    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-store-context/kubernetes-runtime/",
	"title": "kubernetes-Runtime",
	"tags": [],
	"description": "",
	"content": " Description Create a secret-store Kubernetes-Runtime context.\nCreate a secret store to use hybrid runtime to access K8S secret/configmap and use it as secret store.\nCommand codefresh create context secret-store kubernetes-runtime \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for secret-store context\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --help    Print help information   --runtimes --runtime array * Names of the runtime-environment to be used as secret store   --resource-type    Type of the resource in Kubernetes. required\nPossible values:\n- secret\n- configmap   --resource-name    Name of the resource in Kubernetes    "
},
{
	"uri": "https://codefresh-io.github.io/cli/registries/registries/standard/",
	"title": "standard",
	"tags": [],
	"description": "",
	"content": " Description Integrate a standard container registry into Codefresh.\nCommand codefresh create registry standard \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Registry name    Options    Option Alias Type Default Description     --help    Print help information   --username    Username to access the docker registry. required   --password    Password to access the docker registry. required   --domain    Domain to access the docker registry. required   --behind-firewall  boolean false Set if the registry is behind a firewall    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-git-context/stash/",
	"title": "stash",
	"tags": [],
	"description": "",
	"content": " Description Create a stash context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create Stash context you need to provider username and password.\nCommand codefresh create context git stash \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --sharing-policy  string AccountAdmins Set the sharing policy for git contexts\nPossible values:\n- AccountAdmins\n- AllUsersInAccount   --behind-firewall  boolean false Set to true to mark this context with behind firewall flag   --help    Print help information   --username -u   Username. required   --password -p   Password. required   --api-url -a   URL of the api. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/secret/",
	"title": "Secret",
	"tags": [],
	"description": "",
	"content": " Secret context stores a set of keys and values encrypted.\nType .spec.type should be secret.\nData .spec.data should be an array of keys and values.\nExamples secret with two keys apiVersion: \u0026#34;v1\u0026#34; kind: \u0026#34;context\u0026#34; owner: \u0026#34;account\u0026#34; metadata: name: \u0026#34;my-secret-context\u0026#34; spec: type: \u0026#34;secret\u0026#34; data: dbPassword: \u0026#34;secret-db-password\u0026#34; adminPassword: \u0026#34;secret-admin-password\u0026#34;"
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/yarn/",
	"title": "YARN",
	"tags": [],
	"description": "asd",
	"content": "the CLI requires node version 8.0.0 or higher Codefresh\u0026rsquo;s CLI is available for installation using YARN.\nInstall: yarn global add codefresh\nInstall a specific version: yarn global add codefresh@{VERSION}\nUpdate to latest version: yarn global upgrade codefresh\nUpdate to a specific version: yarn global upgrade codefresh@{VERSION}\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/create/",
	"title": "Create",
	"tags": [],
	"description": "",
	"content": " Description Create a resource from a file, directory or url\nSupported resources: \u0026lsquo;context\u0026rsquo;\n\u0026lsquo;step-type\u0026rsquo;\n\u0026lsquo;project\u0026rsquo;\n\u0026lsquo;pipeline\u0026rsquo;\n\u0026lsquo;annotation\u0026rsquo;.\nCommand codefresh create\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/workflow-data/create/",
	"title": "Create",
	"tags": [],
	"description": "",
	"content": " Description Create New Workflow Data Item.\nCommand codefresh create workflow-data-item\nAliases codefresh create wdi workflow-data-item\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --workflow --wf   Workflow ID that the Workflow-Data-Item belongs to. required    Examples Create new Workflow-Data-Iten that belongs to WORKFLOW_ID with content from \u0026ldquo;./file.json\u0026rdquo; codefresh create workflow-data-item --workflow [WORKFLOW_ID] --file ./file.json\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/create-agent/",
	"title": "Create Agent",
	"tags": [],
	"description": "",
	"content": " Description Create an agent.\nCreate an agent used to behind firewall integration.\nCommand codefresh create agent \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of agent    Options    Option Alias Type Default Description     --help    Print help information   --runtimes -r array  Agent runtimes    Examples Create an agent codefresh create agent NAME\nCreate an agent with runtimes: [ \u0026ldquo;runtime1\u0026rdquo;, \u0026ldquo;runtime2\u0026rdquo;] codefresh create agent NAME -r runtime1 -r runtime2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/compositions/create-composition/",
	"title": "Create Composition",
	"tags": [],
	"description": "",
	"content": " Description Create a composition.\nCommand codefresh create composition \u0026lt;name\u0026gt;\nAliases codefresh create com \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of composition    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --compose-file -c   Path to docker-compose.yaml file to use to create the resource. required   --variable -v array  Variables list   --advanced -a boolean false Advanced composition    Examples Creating a composition using a docker-compose.yml file codefresh create composition NAME --compose-file ./docker-compose.yml\nDefining composition variables codefresh create composition NAME --compose-file ./docker-compose.yml -v key1=value1 -v key2=value2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/authentication/create-context/",
	"title": "Create Context",
	"tags": [],
	"description": "",
	"content": " Description Create or update an authentication context.\nCreating authentication contexts enables the ability to work against multiple accounts.\nCommand codefresh auth create-context [name]\nArguments    Option Alias Default Description     name  default Context name    Options    Option Alias Type Default Description     --cfconfig    Custom path for authentication contexts config file (default: \u0026lsquo;/root/.cfconfig\u0026rsquo;)   --help    Print help information   --url  string https://g.codefresh.io Codefresh system custom url   --api-key    API key. required    Examples Creating a default context using KEY as the api-key codefresh auth create-context --api-key KEY\nCreating a named context codefresh auth create-context my-context --api-key KEY\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/helm-repos/create-helm-repo/",
	"title": "Create Helm Repo",
	"tags": [],
	"description": "",
	"content": " Description Create a Codefresh managed helm repo.\nATM it is only possible to create a helm repository against Codefresh managed helm registry.\nCommand codefresh create helm-repo [name]\nArguments    Option Alias Default Description     name   Name of repo. required    Options    Option Alias Type Default Description     --help    Print help information   --public -p boolean false Mark the helm repo as public    Examples Create a private helm repo managed by Codefresh. codefresh create helm-repo\nCreate a public helm repo managed by Codefresh. codefresh create helm-repo --public\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/projects/create-project/",
	"title": "Create Project",
	"tags": [],
	"description": "",
	"content": " Description Create a project.\nCreate a project specifying name unique for account.\nCommand codefresh create project \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of project    Options    Option Alias Type Default Description     --help    Print help information   --tag -t array  Project tags   --variable -v array  Project variables   --encrypted -e array  Variable names to encrypt    Examples Create a project codefresh create project NAME\nCreate a project with tags: [ \u0026ldquo;test\u0026rdquo;, \u0026ldquo;run\u0026rdquo;] codefresh create project NAME -t test -t run\nCreate a project with specific variables codefresh create project NAME -v test=true -v run=false\nCreate a project with encrypted variables codefresh create project NAME -v secret=secret -e secret\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/boards/create-board/",
	"title": "Create board",
	"tags": [],
	"description": "",
	"content": " Description Create a board.\nYou can create a board specifying name unique for account.\nCommand codefresh create board \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of board    Options    Option Alias Type Default Description     --help    Print help information   --filter    Filter for clusters\u0026rsquo; names    Examples Creating a board codefresh create board NAME\nCreating a board with filter /app-.*/gi codefresh create board NAME --filter /app-.*/gi\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/sections/create-section/",
	"title": "Create section",
	"tags": [],
	"description": "",
	"content": " Description Create a section.\nYou can create a section specifying name unique for account.\nCommand codefresh create section \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of section. required    Options    Option Alias Type Default Description     --help    Print help information   --board-id    Id of board where section is creating   --board-name    Name of board where section is creating   --cluster    Name of linked cluster   --color  string #CCAA00 Color of section   --index  string 1 Index of section    Examples Creating a section with board name codefresh create section NAME --board-name BOARD_NAME --cluster CLUSTER_NAME\nCreating a section with board id codefresh create section NAME --board-id ID --cluster CLUSTER_NAME --color \u0026quot;#00AACC\u0026quot; --index 1\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/create-team/",
	"title": "Create team",
	"tags": [],
	"description": "",
	"content": " Description Create a team.\nYou can create a new team specifying only name of team or specify path to json file for include extended options\nPossible fields in file:\nname - team name (specifying name in file will rewrite name specified as command argument) users - array of users id for that team tags - array of tag names.\nCommand codefresh create teams \u0026lt;name\u0026gt;\nAliases codefresh create team \u0026lt;name\u0026gt;\ncodefresh create tm \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of team    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --user-id -u array  undefined   --tag -t array  undefined    Examples Creating a team specifying only team name codefresh create team NAME\nCreating a team using a file to specify additional options codefresh create team NAME -f [pathToFile]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/repository/get-repositories/",
	"title": "Get Repositories",
	"tags": [],
	"description": "",
	"content": " Description You can either get codefresh repos (previously added) or any repo from your git context (using option \u0026ldquo;--available\u0026rdquo; and \u0026ldquo;--context\u0026rdquo;).\nCommand codefresh get repository [names..]\nAliases codefresh get repo [names..]\nArguments    Option Alias Default Description     names   Names for filtering repos    Options    Option Alias Type Default Description     --help    Print help information   --available -a   Get all available git repos from provided or default git context   --limit -l number 25 Maximum displayed repos number   --context -c   Name of the git context to use, if not passed the default will be used    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all codefresh repos codefresh get repo\nGet codefresh repos containing \u0026ldquo;codefresh-io\u0026rdquo; in its name codefresh get repo codefresh-io\nGet codefresh repos containing \u0026ldquo;some-repo\u0026rdquo; in its name codefresh get repo some-repo\nGet all available repos from default git context codefresh get repo -a\nGet all available repos from \u0026ldquo;bitbucket\u0026rdquo; git context codefresh get repo -a -c bitbucket\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/tokens/get-tokens/",
	"title": "Get tokens",
	"tags": [],
	"description": "",
	"content": " Description Get Codefresh tokens.\nProvide names/ids to filter results by them.\nCommand codefresh get tokens [names|ids..]\nAliases codefresh get token [names|ids..]\nArguments    Option Alias Default Description     names   Token names or ids    Options    Option Alias Type Default Description     --help    Print help information    Output Options    Option Alias Type Default Description     --select-columns --sc   Columns to select for table output   --output -o   Output format\nPossible values:\n- json\n- yaml\n- wide\n- name\n- id   --date-format --df   Provide predefined or custom date format. Predefined options: [\u0026ldquo;default\u0026rdquo;, \u0026ldquo;date\u0026rdquo;, \u0026ldquo;datetime\u0026rdquo;, \u0026ldquo;date-diff\u0026rdquo;]   --pretty    Use colors and signs for output   --watch -w boolean false Watching updates to a particular resource   --watch-interval  number 3 Interval time at watching mode (in seconds)    Examples Get all tokens codefresh get tokens\nGet tokens filtered by names or ids codefresh get tokens [token_1_name] [token_2_id]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/install-or-upgrade-helm-chart/",
	"title": "Install or Upgrade Helm Chart",
	"tags": [],
	"description": "",
	"content": " Description Install or upgrade a Helm chart Repository flag can be either absolute url or saved repository in Codefresh.\nCommand codefresh install-chart\nOptions    Option Alias Type Default Description     --help    Print help information   --cluster -c string  Install on cluster. required   --namespace --ns string default Install on namespace   --tiller-namespace --tn string kube-system Where tiller has been installed   --repository -r string kubeapps Helm repository (absolute url or name of context with type helm-repository). required   --name -n string  Name of the chart in the repository. required   --version -v string  Version of the chart in the repository. required   --context    Contexts (yaml   --set    set of KEY=VALUE to be passed to the install   --detach -d   Run pipeline and print build ID   --release-name    The name to set to the release    Examples Install chart from public helm repo codefresh install-chart --name mongodb\nGet all helm repos codefresh get ctx --type helm-repository\nInstall chart saved repo codefresh install-chart --name mongodb --repository my-help-repository\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Codefresh CLI is developed and built with node.js. In case you have node.js installed on your machine you can use NPM or YARN to install it.\nIf you don\u0026rsquo;t have node.js installed you can install the CLI by Downloading it directly.\nIt is also possible to run the CLI using a Docker image.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/promote-helm-release/",
	"title": "Promote Helm Release",
	"tags": [],
	"description": "",
	"content": " Description Promote a Helm release in another environment.\nCommand codefresh helm-promotion\nOptions    Option Alias Type Default Description     --help    Print help information   --board -b string  Board for promotion. required   --source -s string  Source column. required   --target -t string  Target column. required   --namespace -n string default Promote to namespace   --source-tiller-namespace --stn string kube-system Where tiller has been installed in source cluster   --target-tiller-namespace --ttn string kube-system Where tiller has been installed in target cluster   --source-release --sr   The name of source release. required   --source-namespace --sn   The name of source namespace   --revision -r string  Revision of source release   --target-release --tr   The name to set to the release   --context    Contexts (yaml   --set    set of KEY=VALUE to be passed to the install   --detach -d   Run pipeline and print build ID    Examples Promote \u0026lsquo;application\u0026rsquo; release on board \u0026lsquo;app\u0026rsquo; from \u0026lsquo;dev\u0026rsquo; to \u0026lsquo;test\u0026rsquo; environment codefresh helm-promotion --board app --source dev --target test --source-release application\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-helm-repository-context/from-aws-s3-bucket/",
	"title": "S3",
	"tags": [],
	"description": "",
	"content": " Description Create a helm-repository context from s3 bucket.\n\nHelm repository can be stored in AWS S3 bucket.\nCodefresh will integrate with the bucket in the following order\nIf environment variables AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ,AWS_DEFAULT_REGION are set, will use it to create context.\nYou can override them using flags aws-access-key-id aws-secret-access-key aws-default-region.\nCommand codefresh create context helm-repository s3 \u0026lt;name\u0026gt;\nOptions    Option Alias Type Default Description     --help    Print help information   --aws-access-key-id    Amazon access key id [default: AWS_ACCESS_KEY_ID env]   --aws-secret-access-key    Amazon access secret key with permissions to the bucket [default: AWS_SECRET_ACCESS_KEY env]   --aws-default-region    Amazon default region [default: AWS_DEFAULT_REGION env]   --bucket    Name of the bucket. required    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-context/",
	"title": "Secret",
	"tags": [],
	"description": "",
	"content": " Description Create a secret context.\nCommand codefresh create context secret \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of context    Options    Option Alias Type Default Description     --help    Print help information   --variable -v array  Variables list    Examples Create a secret. codefresh create context secret my-secret -v key1=valu1 -v key2=value2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/set-helm-config/",
	"title": "Set Helm config",
	"tags": [],
	"description": "",
	"content": " Description Set Helm config.\nCommand codefresh set-helm-config \u0026lt;cluster\u0026gt;\nArguments    Option Alias Default Description     cluster   Cluster name on integrations page. required    Options    Option Alias Type Default Description     --help    Print help information   --version -v   Major part of helm version (helm2   --test-release-pipeline -t   Pipeline for testing release   --rollback-pipeline -r   Pipeline for rollback   --delete-release-pipeline -d   Pipeline for deleting release   --tiller-namespace    Tiller namespace for helm2   --release-namespaces    List of namespaces for using    Examples Helm2 config codefresh set-helm-config cluster -v 2 -t pip1 -r pip2 -d pip3 --tiller-namespace kube-system\nHelm3 config codefresh set-helm-config cluster -v 3 -t pip1 -r pip2 -d pip3 --release-namespaces ns1 --release-namespaces ns2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/show-build-logs/",
	"title": "Show Build Logs",
	"tags": [],
	"description": "",
	"content": " Description Show logs of a build.\nCommand codefresh logs \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   Build id    Options    Option Alias Type Default Description     --help    Print help information   --f  boolean false Continue showing build logs until it will finish   --no-timestamps  boolean false Don\u0026rsquo;t show timestamps    Examples Get logs of build ID codefresh logs ID\nGet all previous logs of build ID and attach to future logs codefresh logs -f ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-create-trigger-event/",
	"title": "[Deprecated] Create Trigger Event",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Create new trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\nCommand codefresh create trigger-event\nAliases codefresh create te trigger-event\nOptions    Option Alias Type Default Description     --help    Print help information   --type    trigger-event type. required   --kind    trigger-event kind. required   --public  boolean false wether trigger-event is public (system-wide): can be linked to any pipeline in any account   --secret  string !generate trigger-event secret (omit to auto-generate). required   --value -v array  trigger-event specific values pairs (key=value), as required by trigger-type   --context    context with credentials required to setup event on remote system    Examples Create registry/dockerhub trigger-event codefresh create trigger-event --type registry --kind dockerhub --value namespace=codefresh --value name=fortune --value action=push\nCreate cron (once in hour) trigger-event codefresh create trigger-event --type cron --kind codefresh --value expression=\u0026quot;0 0 */1 * * *\u0026quot; --value message=hello\nCreate daily cron trigger-event codefresh create trigger-event --type cron --kind codefresh --value expression=\u0026quot;@daily\u0026quot; --value message=hello-all\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-delete-pipeline-trigger.-deprecated---please-use-pipeline-spec-to-manager-cron-trigger/",
	"title": "[Deprecated] Delete Pipeline Trigger. Deprecated - please use pipeline spec to manager cron trigger",
	"tags": [],
	"description": "",
	"content": " Description Delete trigger: unlink pipeline from trigger-event.\nCommand codefresh delete trigger [event-uri] [pipeline]\nAliases codefresh delete t [event-uri] [pipeline]\nArguments    Option Alias Default Description     event-uri   trigger-event URI (as defined by trigger type[/kind]). required   pipeline   pipeline ID. required    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete trigger by unlinking 5a43\u0026hellip; pipeline from the DockerHub codefresh/fortune push event codefresh delete trigger registry:dockerhub:codefresh:fortune:push 5a439664af73ad0001f3ece0\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/annotations/create/",
	"title": "create",
	"tags": [],
	"description": "",
	"content": " Description Annotate a resource with labels.\nCommand codefresh create annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; \u0026lt;labels...\u0026gt;\nArguments    Option Alias Default Description     entity-type   Type of resource for annotation. required   entity-id   Id of resource for annotation. required   labels   Labels. required    Options    Option Alias Type Default Description     --help    Print help information   --display  string  annotation to display on build    Examples Annotate entity with a single label codefresh create annotation image 2dfacdaad466 coverage=75%\nAnnotate entity with multiple labels codefresh create annotation image 2dfacdaad466 coverage=75% tests_passed=true\nAnnotate entity with multiple labels and display selection codefresh create annotation image 2dfacdaad466 coverage=75% tests_passed=true --display coverage\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/docker/",
	"title": "Docker Image",
	"tags": [],
	"description": "asdsd",
	"content": "You can run the CLI using our official docker image which is published to Dockerhub\nPull the latest version: docker pull codefresh/cli\nPull a specific version: docker pull codefresh/cli:${VERSION}\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/yaml/",
	"title": "Yaml",
	"tags": [],
	"description": "",
	"content": " Yaml context stores an yaml file.\nType .spec.type should be yaml.\nData .spec.data should be an array of keys and values.\nExamples yaml with two keys apiVersion: \u0026#34;v1\u0026#34; kind: \u0026#34;context\u0026#34; owner: \u0026#34;account\u0026#34; metadata: name: \u0026#34;my-yaml-context\u0026#34; spec: type: \u0026#34;yaml\u0026#34; data: serviceType: \u0026#34;LoadBalancer\u0026#34; image: \u0026#34;mongo\u0026#34;"
},
{
	"uri": "https://codefresh-io.github.io/cli/completion/codefresh-completion/",
	"title": "Codefresh Completion",
	"tags": [],
	"description": "",
	"content": " Description Generate codefresh completion. See details on usage\nPrints completion script with specified or default path to executable and command alias.\nCommand codefresh completion [shell-name]\nAliases codefresh completions [shell-name]\nArguments    Option Alias Default Description     shellName  bash Name of the shell to generate completion for\nPossible values:\n- bash\n- zsh    Options    Option Alias Type Default Description     --help    Print help information   --executable -e   Name or path to your codefresh executable (default same as alias)   --alias -a string codefresh Alias used for calling codefresh executable    Examples Print bash completion script codefresh completion\nPrint zsh completion script codefresh completion zsh\nInstall zsh completion script codefresh completion zsh \u0026gt;\u0026gt; ~/.zshrc\nInstall bash completion script codefresh completion bash \u0026gt;\u0026gt; ~/.bashrc\nInstall bash completion script (on OSX) codefresh completion bash \u0026gt;\u0026gt; ~/.bash_profile\nPrint completion script for codefresh aliased as \u0026ldquo;cf\u0026rdquo; cf completion --alias cf\nPrint completion script with specified path to codefresh executable /some/path/codefresh completion -e /some/path/codefresh\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/completion/",
	"title": "Completion",
	"tags": [],
	"description": "",
	"content": " Codefresh Completion codefresh completion [shell-name]\nGenerate codefresh completion. See details on usage\nPrints completion script with specified or default path to executable and command alias.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/delete/",
	"title": "Delete",
	"tags": [],
	"description": "",
	"content": " Description Delete a resource from a file, directory or url\nSupported resources: \u0026lsquo;Context\u0026rsquo;\n\u0026lsquo;Pipeline\u0026rsquo;.\nCommand codefresh delete\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/delete-agent/",
	"title": "Delete Agent",
	"tags": [],
	"description": "",
	"content": " Description Delete an agent.\nCommand codefresh delete agent \u0026lt;id|name\u0026gt;\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information    Examples Delete agent by name. codefresh delete agent NAME\nDelete agent by Id. codefresh delete agent ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/clusters/delete-cluster/",
	"title": "Delete Cluster",
	"tags": [],
	"description": "",
	"content": " Description Delete a cluster.\nCommand codefresh delete cluster \u0026lt;name\u0026gt;\nAliases codefresh delete clusters \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Cluster name. required    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete cluster NAME codefresh delete cluster NAME\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/compositions/delete-composition/",
	"title": "Delete Composition",
	"tags": [],
	"description": "",
	"content": " Description Delete a composition.\nCommand codefresh delete composition \u0026lt;name\u0026gt;\nAliases codefresh delete com \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Composition name    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    Examples Delete a composition codefresh delete composition NAME\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/delete-context/",
	"title": "Delete Context",
	"tags": [],
	"description": "",
	"content": " Description Delete a context.\nCommand codefresh delete context [name]\nAliases codefresh delete ctx [name]\nArguments    Option Alias Default Description     name   Name of context    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    Examples Delete context NAME codefresh delete context NAME\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/environments/delete-environment/",
	"title": "Delete Environment",
	"tags": [],
	"description": "",
	"content": " Description Delete an environment.\nCommand codefresh delete environment \u0026lt;id\u0026gt;\nAliases codefresh delete env \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   Environment id    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete environment ID codefresh delete environment ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/helm-repos/delete-helm-repo/",
	"title": "Delete Helm Repo",
	"tags": [],
	"description": "",
	"content": " Description Delete a helm repo.\nCommand codefresh delete helm-repo [name]\nArguments    Option Alias Default Description     name   Helm repo name. required    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete a helm repo. codefresh delete helm-repo my-repo\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/pipelines/delete-pipeline/",
	"title": "Delete Pipeline",
	"tags": [],
	"description": "",
	"content": " Description Delete a pipeline.\nCommand codefresh delete pipeline [name]\nAliases codefresh delete pip [name]\nArguments    Option Alias Default Description     name   Pipeline name    Options    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/projects/delete-project/",
	"title": "Delete Project",
	"tags": [],
	"description": "",
	"content": " Description Delete a project.\nCommand codefresh delete project \u0026lt;id|name\u0026gt;\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information    Examples Delete project by name. codefresh delete project NAME\nDelete project by Id. codefresh delete project ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/registries/delete-registry/",
	"title": "Delete Registry",
	"tags": [],
	"description": "",
	"content": " Description Delete registry from Codefresh.\nCommand codefresh delete registry \u0026lt;ID\u0026gt;\nArguments    Option Alias Default Description     ID   ID of a registry to delete    Options    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/repository/delete-repository/",
	"title": "Delete Repository",
	"tags": [],
	"description": "",
	"content": " Description Remove repository by name_id (\u0026ldquo;name_id\u0026rdquo; can be retrieved with \u0026ldquo;get\u0026rdquo; command, typically \u0026ldquo;repo_owner/repo_name\u0026rdquo;)\nCommand codefresh delete repository [name_id]\nAliases codefresh delete repo [name_id]\nArguments    Option Alias Default Description     name_id   Repository \u0026ldquo;name_id\u0026rdquo; (can be retrieved with \u0026ldquo;get\u0026rdquo; command, typically \u0026ldquo;repo_owner/repo_name\u0026rdquo;). required    Options    Option Alias Type Default Description     --help    Print help information   --context -c   Name of the git context to use, if not passed the default will be used    Examples Delete codefresh repo with name_id \u0026ldquo;codefresh-io/some-repo\u0026rdquo; codefresh delete repo codefresh-io/some-repo\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/delete-runtime-environments/",
	"title": "Delete Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description Delete a runtime-environment.\nCommand codefresh delete runtime-environments name\nAliases codefresh delete re name\ncodefresh delete runtime-environment name\nArguments    Option Alias Default Description     name   Runtime environment name    Options    Option Alias Type Default Description     --help    Print help information   --force  boolean false Delete runtime environment in force mode    "
},
{
	"uri": "https://codefresh-io.github.io/cli/step-types/delete-step-type/",
	"title": "Delete Step-type",
	"tags": [],
	"description": "",
	"content": " Description Delete a step-type.\nCommand codefresh delete step-type [name]\nArguments    Option Alias Default Description     name   Step-type name    Options    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/board/delete-board/",
	"title": "Delete board",
	"tags": [],
	"description": "",
	"content": " Description Delete a board.\nCommand codefresh delete board [id]\nArguments    Option Alias Default Description     id   board id   name   board name    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete board by name. codefresh delete board --name NAME\nDelete board by Id. codefresh delete board ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/section/delete-section/",
	"title": "Delete section",
	"tags": [],
	"description": "",
	"content": " Description Delete a section.\nCommand codefresh delete section [id]\nArguments    Option Alias Default Description     id   section id    Options    Option Alias Type Default Description     --help    Print help information   --boardId    board Id   --boardName    board name   --name    section name    Examples Delete section by board name and section name. codefresh delete section --board-name BOARD --name NAME\nDelete section by id. codefresh delete section SECTION_ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/authentication/get-activated-context/",
	"title": "Get Activated Context",
	"tags": [],
	"description": "",
	"content": " Description Get the current activated authentication context.\nCommand codefresh auth current-context\nOptions    Option Alias Type Default Description     --cfconfig    Custom path for authentication contexts config file (default: \u0026lsquo;/root/.cfconfig\u0026rsquo;)   --help    Print help information    Examples Show active authentication context codefresh auth current-context\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/remove-user/",
	"title": "Remove user",
	"tags": [],
	"description": "",
	"content": " Description Remove user from team.\nPass user id and team id to remove user from team.\nCommand codefresh delete teams\nAliases codefresh delete team teams\ncodefresh delete tm teams\nOptions    Option Alias Type Default Description     --help    Print help information   --team-id -t   Id team in which to remove a user. required   --user-id -u   Id of a user to remove him in team. required    Examples Remove user from team codefresh delete tm -u [userID] -t [teamID]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/restart-build/",
	"title": "Restart Build",
	"tags": [],
	"description": "",
	"content": " Description Restart a build by its id.\nCommand codefresh restart \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   Build id    Options    Option Alias Type Default Description     --help    Print help information   --detach -d   Run build and print workflow ID    Examples Restart build ID and attach the created new build codefresh restart ID\nRestart build ID and return the new build id codefresh restart ID -d\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-yaml-context/",
	"title": "Secret Yaml",
	"tags": [],
	"description": "",
	"content": " Description Create a secret-yaml context.\nCommand codefresh create context secret-yaml \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of context    Options    Option Alias Type Default Description     --help    Print help information   --variable -v array  Variables list    "
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/test-helm-release/",
	"title": "Test Helm Release",
	"tags": [],
	"description": "",
	"content": " Description Test a helm release.\nCommand codefresh test-release \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Release name. required    Options    Option Alias Type Default Description     --help    Print help information   --cluster  string  Run on cluster. required   --tiller-namespace -n string kube-system namespace where is tiller running ( helm 2 only )   --namespace --ns string default namespace where is chart located ( helm 3 )   --timeout  number 300 time in seconds to wait for any individual kubernetes operation (like Jobs for hooks) (default 300)   --detach -d   Run pipeline and print build ID   --cleanup  boolean false delete test pods upon completion (default false)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/deprecated-delete-trigger-event/",
	"title": "[Deprecated] Delete Trigger Event",
	"tags": [],
	"description": "",
	"content": " Description [Deprecated] Delete trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\nCommand codefresh delete trigger-event [event-uri]\nAliases codefresh delete te [event-uri]\nArguments    Option Alias Default Description     event-uri   trigger-event URI    Options    Option Alias Type Default Description     --help    Print help information   --context    context with credentials required to setup event on remote system    Examples Delete registry/dockerhub trigger-event codefresh delete trigger-event --context dockerhub registry:dockerhub:codefresh:fortune:push\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/annotations/delete/",
	"title": "delete",
	"tags": [],
	"description": "",
	"content": " Description Delete annotations.\nCommand codefresh delete annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; [labels...]\nArguments    Option Alias Default Description     entity-type   Type of resource for annotation. required   entity-id   Id of resource for annotation. required   labels   Labels to delete    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete specified annotations codefresh delete annotation image 2dfacdaad466 coverage tests_passed\nDelete all annotations of entity codefresh delete annotation image 2dfacdaad466\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/authentication/",
	"title": "Authentication",
	"tags": [],
	"description": "",
	"content": " Get Contexts codefresh auth get-contexts\nGet all possible authentication contexts.\nCreate Context codefresh auth create-context [name]\nCreate or update an authentication context.\nCreating authentication contexts enables the ability to work against multiple accounts.\nGet Activated Context codefresh auth current-context\nGet the current activated authentication context.\nSet Active Context codefresh auth use-context \u0026lt;name\u0026gt;\nSet the current active authentication context.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/",
	"title": "Operate On Resources",
	"tags": [],
	"description": "",
	"content": " The CLI supports the ability to work with spec files when working with resources.\nThe supported formats are yaml and json. Check each specific resource spec for its documentation\nGet codefresh get\nGet a resource from a file, directory or url\nSupported resources:.\nCreate codefresh create\nCreate a resource from a file, directory or url\nSupported resources: \u0026lsquo;context\u0026rsquo;\n\u0026lsquo;step-type\u0026rsquo;\n\u0026lsquo;project\u0026rsquo;\n\u0026lsquo;pipeline\u0026rsquo;\n\u0026lsquo;annotation\u0026rsquo;.\nDelete codefresh delete\nDelete a resource from a file, directory or url\nSupported resources: \u0026lsquo;Context\u0026rsquo;\n\u0026lsquo;Pipeline\u0026rsquo;.\nPatch codefresh patch\nPatch a resource from a file, directory or url\nPatch operation will apply only passed changes to an existing resource and will throw an error if the resource does not exist.\nSupported resources: \u0026lsquo;Context\u0026rsquo;.\nUpgrade codefresh upgrade\nUpgrade a resource from a file, directory or url\nUpgrade operation will apply only passed changes to an existing resource and will throw an error if the resource does not exist.\nSupported resources: \u0026lsquo;Context\u0026rsquo;.\nReplace codefresh replace\nReplace a resource from a file, directory or url\nSupported resources: \u0026lsquo;Context\u0026rsquo;\n\u0026lsquo;Pipeline\u0026rdquo;\n\u0026lsquo;Step-type\u0026rsquo;.\nDiff codefresh diff\nShow diff between two resources\nSupported resources: runtime-environments.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/download/",
	"title": "Download",
	"tags": [],
	"description": "asd",
	"content": "Navigate to Official Releases and download the binary that matches your operating system.\nWe currently support the following OS:  Alpine-x64 Linux-x64 Macos-x64 Windows-x64 Alpine-arm64 Linux-arm64\nAfter downloading the binary, untar or unzip it and your are good to go.\nYou can also add the binary to your system PATH environment variable so you can use it easily.\nIf your operating system is missing please feel free to open us an issue in our Github repository.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/secret-yaml/",
	"title": "Secret Yaml",
	"tags": [],
	"description": "",
	"content": " Secret-Yaml context stores an yaml file encrypted.\nType .spec.type should be secret-yaml.\nData .spec.data should be an array of keys and values.\nExamples secret-yaml with two keys apiVersion: \u0026#34;v1\u0026#34; kind: \u0026#34;context\u0026#34; owner: \u0026#34;account\u0026#34; metadata: name: \u0026#34;my-secret-yaml-context\u0026#34; spec: type: \u0026#34;secret-yaml\u0026#34; data: serviceType: \u0026#34;LoadBalancer\u0026#34; image: \u0026#34;mongo\u0026#34; type: - \u0026#34;encrypted\u0026#34;"
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/add-user/",
	"title": "Add user",
	"tags": [],
	"description": "",
	"content": " Description Assign user to a team.\nUse patch command and pass user id and team id to assign user to a team.\nCommand codefresh patch teams\nAliases codefresh patch team teams\ncodefresh patch tm teams\nOptions    Option Alias Type Default Description     --help    Print help information   --team-id -t   Id team in which to add a user. required   --user-id -u   Id of a user to add him in team. required    Examples Assign user to team codefresh patch tm -u [userID] -t [teamID]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/tokens/delete-tokens/",
	"title": "Delete tokens",
	"tags": [],
	"description": "",
	"content": " Description Revoke Codefresh token.\nProvide one or many token ids to delete. Ids can be retrieved with \u0026ldquo;get\u0026rdquo; command.\nCommand codefresh delete tokens [ids..]\nAliases codefresh delete token [ids..]\nArguments    Option Alias Default Description     ids   token names or ids. required    Options    Option Alias Type Default Description     --help    Print help information    Examples Delete one token codefresh delete token [token_id]\nDelete many tokens codefresh delete tokens [token_id_1] [token_id_2]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/components/download/",
	"title": "Download",
	"tags": [],
	"description": "",
	"content": " Description Download Codefresh CLI components.\nCommand codefresh components download\nOptions    Option Alias Type Default Description     --help    Print help information   --location    Override download folder location. Default: ~/.Codefresh   --components    Components. List of [stevedore, venona, argocd-agent, codefresh]    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/execute-test-pipeline/",
	"title": "Execute test pipeline",
	"tags": [],
	"description": "",
	"content": " Description Executes test pipeline.\nCommand codefresh runner execute-test-pipeline\nOptions    Option Alias Type Default Description     --help    Print help information   --runtime-name    Runtime name to execute pipeline on    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/info/",
	"title": "Info",
	"tags": [],
	"description": "",
	"content": " Description Get info on your runner installations.\nCommand codefresh runner info\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/install-resources/install/",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": " Description Install a resource\nInstall operation will install codefresh components on kubernetes cluster.\nCommand codefresh install\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/patch/",
	"title": "Patch",
	"tags": [],
	"description": "",
	"content": " Description Patch a resource from a file, directory or url\nPatch operation will apply only passed changes to an existing resource and will throw an error if the resource does not exist.\nSupported resources: \u0026lsquo;Context\u0026rsquo;.\nCommand codefresh patch\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/patch-agent/",
	"title": "Patch Agent",
	"tags": [],
	"description": "",
	"content": " Description Patch an agent.\nCommand codefresh patch agent [id|name]\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information   --newName -n   New name   --runtimes --re   Agent runtimes    Examples Replace agent name. Specifying agent by ID codefresh patch agent ID --name NEW_NAME\nReplace agent runtimes. Specifying agent by NAME codefresh patch agent NAME --re runtime1\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/projects/patch-project/",
	"title": "Patch Project",
	"tags": [],
	"description": "",
	"content": " Description Patch a project.\nCommand codefresh patch project [id|name]\nArguments    Option Alias Default Description     id name      Options    Option Alias Type Default Description     --help    Print help information   --newName -n   New name   --tag -t   Project tags   --variable -v   Project variables   --encrypted -e   Variable names to encrypt    Examples Replace project name and tags. Specifying project by ID codefresh patch project ID --new-name NEW_NAME --tag test\nReplace project variables. Specifying project by NAME codefresh patch project NAME -v test=test\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/tokens/patch-token/",
	"title": "Patch token",
	"tags": [],
	"description": "",
	"content": " Description Patch Codefresh token.\nUpdate token name or scopes using token id. Id can be retrieved using \u0026ldquo;get\u0026rdquo; command.\nCommand codefresh patch tokens \u0026lt;id\u0026gt;\nAliases codefresh patch token \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   token id. required    Options    Option Alias Type Default Description     --help    Print help information   --name    token name or ids   --scope -s   token names or ids    Examples Update token name codefresh patch token [token_id] --name new-name\nSet token scopes to \u0026ldquo;pipeline\u0026rdquo;, \u0026ldquo;project\u0026rdquo; codefresh patch token [token_id] -s pipeline -s project\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/pipelines/",
	"title": "Pipelines",
	"tags": [],
	"description": "",
	"content": " Get Pipeline codefresh get pipelines [id..]\nGet a specific pipeline or an array of pipelines.\nDelete Pipeline codefresh delete pipeline [name]\nDelete a pipeline.\nRun Pipeline codefresh run [name]\nRun a pipeline by id or name and attach the created workflow logs.\nReturns an exit code according to the workflow finish status (Success: 0, Error: 1, Terminated: 2).\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runner-resources/runner/",
	"title": "Runner",
	"tags": [],
	"description": "",
	"content": " Description Manage and install runner resources\nManage codefresh runner solution\u0026rsquo;s components on kubernetes cluster.\nCommand codefresh runner\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/authentication/set-active-context/",
	"title": "Set Active Context",
	"tags": [],
	"description": "",
	"content": " Description Set the current active authentication context.\nCommand codefresh auth use-context \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   a context-name that exists in cfconfig file    Options    Option Alias Type Default Description     --cfconfig    Custom path for authentication contexts config file (default: \u0026lsquo;/root/.cfconfig\u0026rsquo;)   --help    Print help information    Examples Set active authentication context to NAME codefresh auth use-context NAME\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/terminate-build/",
	"title": "Terminate Build",
	"tags": [],
	"description": "",
	"content": " Description Terminate a build by its id.\nThis command will return once the request has been received from the server.\nThe termination process can take time according to the pipeline definition.\nCommand codefresh terminate \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   Build id    Options    Option Alias Type Default Description     --help    Print help information    Examples Terminate build ID codefresh terminate ID\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/uninstall-resources/uninstall/",
	"title": "Uninstall",
	"tags": [],
	"description": "",
	"content": " Description Uninstall a resource\nUninstall operation will uninstall codefresh components on kubernetes cluster.\nCommand codefresh uninstall\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/components/update/",
	"title": "Update",
	"tags": [],
	"description": "",
	"content": " Description Update Codefresh CLI components.\nCommand codefresh components update\nOptions    Option Alias Type Default Description     --help    Print help information   --location    Override download folder location   --bypass-download  boolean false Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder    "
},
{
	"uri": "https://codefresh-io.github.io/cli/board/update-board/",
	"title": "Update Board",
	"tags": [],
	"description": "",
	"content": " Description Update a board.\nCommand codefresh patch board [id]\nArguments    Option Alias Default Description     id   Id of existing board    Options    Option Alias Type Default Description     --help    Print help information   --name    Name of existing board   --newName    New name   --filter    New filter    Examples Update name and filter of board. Specifying board by ID codefresh patch board ID --new-name NEW_NAME --filter /app-*/gi\nUpdate name and filter of board. Specifying board by NAME codefresh patch board --name OLD_NAME --new-name NEW_NAME --filter /app-*/gi\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/helm-repos/update-helm-repo/",
	"title": "Update Helm Repo",
	"tags": [],
	"description": "",
	"content": " Description Update a helm repo.\nCommand codefresh patch helm-repo [name]\nArguments    Option Alias Default Description     name   Old repo name. required    Options    Option Alias Type Default Description     --help    Print help information   --public -p boolean false Mark the helm repo as public   --newName -n string  New repo name    Examples Update helm repo to be public codefresh patch helm-repo my-repo -p\nUpdate helm repo to be private codefresh patch helm-repo my-repo -p=false\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/section/update-section/",
	"title": "Update Section",
	"tags": [],
	"description": "",
	"content": " Description Update a section.\nCommand codefresh patch section [id]\nArguments    Option Alias Default Description     id   Id of existing section    Options    Option Alias Type Default Description     --help    Print help information   --boardId    Id of existing board   --boardName    Name of existing board   --name    Name of existing section   --newName    New name   --cluster    Name of linked cluster   --color    New color   --index    New index    Examples Update name and filter of section. Specifying section by ID codefresh patch section ID --new-name NEW_NAME --filter /app-*/gi\nUpdate name and filter of section. Specifying section by NAME codefresh patch section --name OLD_NAME --new-name NEW_NAME --filter /app-*/gi\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/upgrade/",
	"title": "Upgrade",
	"tags": [],
	"description": "",
	"content": " Description Upgrade a resource from a file, directory or url\nUpgrade operation will apply only passed changes to an existing resource and will throw an error if the resource does not exist.\nSupported resources: \u0026lsquo;Context\u0026rsquo;.\nCommand codefresh upgrade\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-yaml-context/",
	"title": "Yaml",
	"tags": [],
	"description": "",
	"content": " Description Create a yaml context.\nCommand codefresh create context yaml \u0026lt;name\u0026gt;\nArguments    Option Alias Default Description     name   Name of context    Options    Option Alias Type Default Description     --help    Print help information   --variable -v array  Variables list    "
},
{
	"uri": "https://codefresh-io.github.io/cli/codefresh-cli-components/components/",
	"title": "components",
	"tags": [],
	"description": "",
	"content": " Description Codefresh CLI components\nCommand codefresh components\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/projects/",
	"title": "Projects",
	"tags": [],
	"description": "",
	"content": " Get Projects codefresh get projects [id|name]\nGet a specific project or an array of projects.\nCreate Project codefresh create project \u0026lt;name\u0026gt;\nCreate a project.\nCreate a project specifying name unique for account.\nDelete Project codefresh delete project \u0026lt;id|name\u0026gt;\nDelete a project.\nPatch Project codefresh patch project [id|name]\nPatch a project.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/helm-repository/",
	"title": "Helm Repository",
	"tags": [],
	"description": "",
	"content": " Helm-Repository context stores an integration with a helm repository.\nType .spec.type should be helm-repository.\nData .spec.data should be an array of keys and values.\nExamples "
},
{
	"uri": "https://codefresh-io.github.io/cli/images/annotate-image/",
	"title": "Annotate Image",
	"tags": [],
	"description": "",
	"content": " Description Annotate an image.\nAnnotating an image gives the ability to add extra context on your already existing images.\nCommand codefresh annotate image \u0026lt;id\u0026gt;\nAliases codefresh annotate img \u0026lt;id\u0026gt;\nArguments    Option Alias Default Description     id   Docker image full name or id    Options    Option Alias Type Default Description     --help    Print help information   --label -l array  annotations to add to the image    Examples Annotate an image with a single label codefresh annotate image 2dfacdaad466 -l coverage=75%\nAnnotate an image with multiple labels codefresh annotate image 2dfacdaad466 -l coverage=75% -l tests_passed=true\nAnnotate an image by name with multiple labels codefresh annotate image codefresh/cli:latest -l coverage=75% -l tests_passed=true\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/",
	"title": "Builds",
	"tags": [],
	"description": "",
	"content": " Get Build codefresh get builds [id..]\nGet a specific build or an array of builds.\nPassing [id] argument will cause a retrieval of a specific build.\nIn case of not passing [id] argument, a list will be returned.\nShow Build Logs codefresh logs \u0026lt;id\u0026gt;\nShow logs of a build.\nRestart Build codefresh restart \u0026lt;id\u0026gt;\nRestart a build by its id.\nTerminate Build codefresh terminate \u0026lt;id\u0026gt;\nTerminate a build by its id.\nThis command will return once the request has been received from the server.\nThe termination process can take time according to the pipeline definition.\nWait For Build Condition codefresh wait \u0026lt;id..\u0026gt;\nWait until a condition will be met on a build.\nWait command is useful in case there is a need to wait for a desired status on a specific set of builds.\nApprove codefresh approve \u0026lt;buildId\u0026gt;\nApprove a pending-approval workflow.\napprove \u0026lt;$BUILD_ID\u0026gt;.\nDeny codefresh deny \u0026lt;buildId\u0026gt;\nDeny a pending-approval workflow.\ndeny \u0026lt;$BUILD_ID\u0026gt;.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/pipelines/run-pipeline/",
	"title": "Run Pipeline",
	"tags": [],
	"description": "",
	"content": " Description Run a pipeline by id or name and attach the created workflow logs.\nReturns an exit code according to the workflow finish status (Success: 0, Error: 1, Terminated: 2).\nCommand codefresh run [name]\nArguments    Option Alias Default Description     name   Pipeline name    Options    Option Alias Type Default Description     --help    Print help information   --trigger -t   Trigger id or name   --branch -b   Branch   --memory    Mention machine memory sizes during pipeline run   --cpu    Mention machine cpu sizes during pipeline run   --disk    Mention machine disk space sizes during pipeline run   --pack-name    Resources size (small, medium or large)\nPossible values:\n- small\n- medium\n- large   --runtime-name    Runtime environment for run pipeline   --sha -s   Set commit sha   --no-cache --nc boolean false Ignore cached images   --annotation -a array  Add annotations to created build   --enable-notifications --en boolean false Report notifications about pipeline execution   --reset-volume --rv boolean false Reset pipeline cached volume   --variable -v array  Set build variables   --secret -S array  Set build secrets   --detach -d   Run pipeline and print build ID   --context -c array  Run pipeline with contexts   --local  boolean false Run pipeline on your local docker machine   --local-volume --lv   Use your file system as volume in local run   --no-cf-cache --ncfc boolean false Ignore Codefresh cache optimizations   --only    run only specific steps   --skip    skip specific steps   --debug    debug mode   --variable-file --var-file   Set build variables from a file   --yaml -y   Override codefresh.yaml for this execution    variable-file (var-file) It is possible to pass build variables using a file. (supported format: json and yaml) The variables file structure should be an array. The pipeline will be triggered multiple times according to the array length.\nVariable yaml file with 2 sets of variables - key: value key2: key1 - key: value key2: key2 Variable json file with 2 sets of variables [ { \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;, \u0026#34;key2\u0026#34;: \u0026#34;key1\u0026#34; }, { \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;, \u0026#34;key2\u0026#34;: \u0026#34;key2\u0026#34; } ] Examples Choosing a specific trigger codefresh run PIPELINE_ID | PIPELINE_NAME --trigger TRIGGER_ID | TRIGGER_NAME -b=master\nDefining the source control context using a branch codefresh run PIPELINE_ID | PIPELINE_NAME -b=master\nDefining the source control context using a commit codefresh run PIPELINE_ID | PIPELINE_NAME -s=52b992e783d2f84dd0123c70ac8623b4f0f938d1\nSetting variables through the command codefresh run PIPELINE_ID | PIPELINE_NAME -b=master -v key1=value1 -v key2=value2\nSettings variables through a yml file codefresh run PIPELINE_ID | PIPELINE_NAME -b=master --var-file ./var_file.yml\nInject contexts to the pipeline execution codefresh run PIPELINE_ID | PIPELINE_NAME -b=master --context context\nSkip specific steps codefresh run PIPELINE_ID | PIPELINE_NAME --skip step1 step2 step3\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/wait-for-build-condition/",
	"title": "Wait For Build Condition",
	"tags": [],
	"description": "",
	"content": " Description Wait until a condition will be met on a build.\nWait command is useful in case there is a need to wait for a desired status on a specific set of builds.\nCommand codefresh wait \u0026lt;id..\u0026gt;\nArguments    Option Alias Default Description     id   Build id    Options    Option Alias Type Default Description     --help    Print help information   --status -s string success Build status. required\nPossible values:\n- pending\n- elected\n- running\n- error\n- success\n- terminating\n- terminated\n- pending-approval\n- delayed   --verbose -v boolean false Show debug output until the condition will be met.   --timeout -t number 30 Define a timeout for the wait operation in minutes    Examples Wait until build \u0026ldquo;ID\u0026rdquo; will reach \u0026ldquo;success\u0026rdquo; status codefresh wait ID\nWait until build \u0026ldquo;ID\u0026rdquo; will reach \u0026ldquo;terminated\u0026rdquo; status codefresh wait ID --status=terminated\nWait until build \u0026ldquo;ID1\u0026rdquo; and build \u0026ldquo;ID2\u0026rdquo; will reach \u0026ldquo;success\u0026rdquo; status codefresh wait ID1 ID2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/installation/homebrew/",
	"title": "HOMEBREW",
	"tags": [],
	"description": "Homebrew install",
	"content": " Install Codefresh CLI on macOS with Homebrew.\nInstall # tap Codefresh homebrew repo brew tap codefresh-io/cli # install Codefresh CLI brew install codefresh Update to the latest version brew upgrade codefresh Uninstall brew uninstall codefresh"
},
{
	"uri": "https://codefresh-io.github.io/cli/images/tag-image/",
	"title": "Tag Image",
	"tags": [],
	"description": "",
	"content": " Description Add an image tag.\nTagging an image will result in the creation of a new Docker Image tag. If registry not specified - default is used.\nCommand codefresh tag \u0026lt;id\u0026gt; [tags..]\nArguments    Option Alias Default Description     id   Docker image id   names   Tag names    Options    Option Alias Type Default Description     --help    Print help information   --registry -r   Registry integration name    Examples Tag image \u0026lsquo;2dfacdaad466\u0026rsquo; with a new tag: \u0026lsquo;1.0.0\u0026rsquo; on default registry codefresh tag 2dfacdaad466 1.0.0\nTag image \u0026lsquo;2dfacdaad466\u0026rsquo; with a new tag: \u0026lsquo;1.0.0\u0026rsquo; on dockerhub codefresh tag 2dfacdaad466 1.0.0 --registry dockerhub\nTag image \u0026lsquo;2dfacdaad466\u0026rsquo; with multiple tags: \u0026lsquo;1.0.0\u0026rsquo; and \u0026lsquo;my-tag\u0026rsquo; codefresh tag 2dfacdaad466 1.0.0 my-tag\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/",
	"title": "Contexts",
	"tags": [],
	"description": "",
	"content": " Get Context codefresh get contexts [name..]\nGet a specific context or an array of contexts.\nPassing [name] argument will cause a retrieval of a specific context.\nIn case of not passing [name] argument, a list will be returned.\nDelete Context codefresh delete context [name]\nDelete a context.\nUpdate Context codefresh patch context\nApply changes to a context.\nUse apply to patch an existing context.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/audit/download/",
	"title": "Download",
	"tags": [],
	"description": "",
	"content": " Description Download audit.\nCommand codefresh download audit\nOptions    Option Alias Type Default Description     --help    Print help information   --userName    filter by user name   --userId    filter by codefresh user id   --entity    filter by api entity, example: pipeline, account   --entityId    filter by api entity id, this value different for each action, example: email, user id   --action    filter by api action, get possible values on /api/audit/entitiesList, you will see only actions which was happen in your account   --rs_status    filter by response status code   --showTriggers    returns only actions related to receiving triggers   --search    filter by searching substring in request body or query or params or headers or url   --from    filter by date, value is number of milliseconds since 1970   --to    filter by date, value is number of milliseconds since 1970   --sortField    name of sorting field, values: id, createdAt, updatedAt\nPossible values:\n- id\n- createdAt\n- updatedAt   --sortType    sorting type, values: ASK, DESK\nPossible values:\n- ASK\n- DESK   --file  string /codefresh/volume/cli/codefresh_audit_2025-07-10_09-06-55.csv The name of the file and the directory in which the audit will be saved    Examples undefined codefresh download audit --file /var/www/audit.csv\nundefined --entity account --rs_status 200 --sortType DESK --sortField createdAt\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/more/image-pull-secret/",
	"title": "Image Pull Secret",
	"tags": [],
	"description": "",
	"content": " Description Generate image pull secret on Kubernetes cluster from integrated Docker registry.\n\nFor Kuberentes cluster to pull an image from your private registry it needs special secret typed as kubernetes.io/dockercfg.\nAfter this secret been created you can use them in pod template that lives in the same namespace.\nYou can generate this secret from any integrated Docker registry on your account.\nMore information about image pull secret can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.\nCommand codefresh generate image-pull-secret\nOptions    Option Alias Type Default Description     --help    Print help information   --cluster    cluster name. required   --namespace  string default namespace name   --registry    name of Docker registry to generate pull secret from. required    Examples Generate image pull secret codefresh generate image-pull-secret --cluster cluster --registry cfcr\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/images/untag-image/",
	"title": "Untag Image",
	"tags": [],
	"description": "",
	"content": " Description Untag an image.\nUntagging an image will result in the removal of tag. If registry not specified - default is used.\nCommand codefresh untag \u0026lt;id\u0026gt; [tags..]\nArguments    Option Alias Default Description     id   Docker image id   names   Tag names    Options    Option Alias Type Default Description     --help    Print help information   --registry -r   Registry integration name    Examples Remove tag \u0026lsquo;1.0.0\u0026rsquo; from image \u0026lsquo;2dfacdaad466\u0026rsquo; on default registry codefresh untag 2dfacdaad466 1.0.0\nRemove tag \u0026lsquo;2dfacdaad466\u0026rsquo; with a new tag: \u0026lsquo;1.0.0\u0026rsquo; on dockerhub codefresh untag 2dfacdaad466 1.0.0 --registry dockerhub\nRemove tags \u0026lsquo;1.0.0\u0026rsquo; and \u0026lsquo;my-tag\u0026rsquo; from image\u0026rsquo;2dfacdaad466\u0026rsquo; codefresh untag 2dfacdaad466 1.0.0 my-tag\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/images/",
	"title": "Images",
	"tags": [],
	"description": "",
	"content": " Get Image codefresh get images [id..]\nGet a specific image or an array of images.\nPassing [id] argument will cause a retrieval of a specific image.\nIn case of not passing [id] argument, a list will be returned.\nAnnotate Image codefresh annotate image \u0026lt;id\u0026gt;\nAnnotate an image.\nAnnotating an image gives the ability to add extra context on your already existing images.\nTag Image codefresh tag \u0026lt;id\u0026gt; [tags..]\nAdd an image tag.\nTagging an image will result in the creation of a new Docker Image tag. If registry not specified - default is used.\nUntag Image codefresh untag \u0026lt;id\u0026gt; [tags..]\nUntag an image.\nUntagging an image will result in the removal of tag. If registry not specified - default is used.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/replace/",
	"title": "Replace",
	"tags": [],
	"description": "",
	"content": " Description Replace a resource from a file, directory or url\nSupported resources: \u0026lsquo;Context\u0026rsquo;\n\u0026lsquo;Pipeline\u0026rdquo;\n\u0026lsquo;Step-type\u0026rsquo;.\nCommand codefresh replace\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --skip-trigger-validation  boolean false Set to true to skip validation (for pipeline replace)    "
},
{
	"uri": "https://codefresh-io.github.io/cli/compositions/replace-composition/",
	"title": "Replace Composition",
	"tags": [],
	"description": "",
	"content": " Description Replace a composition resource.\nCommand codefresh replace composition [name]\nAliases codefresh replace com [name]\nArguments    Option Alias Default Description     name   Name of composition    Options    Option Alias Type Default Description     --skip-trigger-validation  boolean false Set to true to skip validation (for pipeline replace)   --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --compose-file -c   Path to docker-compose.yaml file to use to create the resource. required   --variable -v array  Variables list   --advanced -a boolean false Advanced composition    Examples Replace a composition using a spec file codefresh replace composition -f ./composition-spec.yml\nReplace a composition using options codefresh replace composition NAME --compose-file ./docker-compose.yml -v key1=value1 -v key2=value2\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/apply-runtime-environments/",
	"title": "Apply Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description apply changes to runtime-environments resource.\nUse apply to patch an existing context.\nCommand codefresh patch runtime-environments [name]\nAliases codefresh patch re [name]\ncodefresh patch runtime-environment [name]\nArguments    Option Alias Default Description     name   Runtime environments name    Options    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource   --default    Set the chosen runtime environment as default   --extends  array  Set the runtime environments you want to extends from   --namespace --ns   Set the desire namespace   --cluster -c   Set the desire cluster   --description -d   Description of the new runtime environment    Examples Apply changes to a runtime-environment codefresh patch runtime-environments -f ./re.yml\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/triggers/",
	"title": "Triggers",
	"tags": [],
	"description": "",
	"content": " [Deprecated] Create Pipeline Trigger codefresh create trigger [event-uri] [pipeline]\n[Deprecated] Create trigger: link pipeline to trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\n[Deprecated] Get Triggers codefresh get triggers\n[Deprecated] Get triggers, optionally filtered by pipeline or event. Deprecated - please use pipeline spec to manager cron triggers.\nOnly cron/registry triggers are supported (for git triggers use codefresh get pip \u0026lt;pip-name\u0026gt; -o json).\n[Deprecated] Get Trigger Event codefresh get trigger-events [event-uri]\n[Deprecated] Get trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\n[Deprecated] Get Trigger Types codefresh get trigger-types\n[Deprecated] Get a list of available trigger-types. Deprecated - please use pipeline spec to manager cron trigger.\n[Deprecated] Delete Pipeline Trigger. Deprecated - please use pipeline spec to manager cron trigger codefresh delete trigger [event-uri] [pipeline]\nDelete trigger: unlink pipeline from trigger-event.\n[Deprecated] Create Trigger Event codefresh create trigger-event\n[Deprecated] Create new trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\n[Deprecated] Delete Trigger Event codefresh delete trigger-event [event-uri]\n[Deprecated] Delete trigger-event. Deprecated - please use pipeline spec to manager cron trigger.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/update-context/",
	"title": "Update Context",
	"tags": [],
	"description": "",
	"content": " Description Apply changes to a context.\nUse apply to patch an existing context.\nCommand codefresh patch context\nAliases codefresh patch ctx context\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    Examples Apply changes to a context codefresh patch context -f ./context.yml\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/",
	"title": "Agents",
	"tags": [],
	"description": "",
	"content": " Get Agents codefresh get agents [id|name]\nGet a specific agent or an array of agents.\nCreate Agent codefresh create agent \u0026lt;name\u0026gt;\nCreate an agent.\nCreate an agent used to behind firewall integration.\nDelete Agent codefresh delete agent \u0026lt;id|name\u0026gt;\nDelete an agent.\nPatch Agent codefresh patch agent [id|name]\nPatch an agent.\nInstall codefresh install agent\nInstall and create an agent on kubernetes cluster.\nUninstall codefresh uninstall agent\nUninstall an agent on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/analyzer/analyze/",
	"title": "Analyze",
	"tags": [],
	"description": "",
	"content": " Description Analyzes your git repository and creates a proposed Codefresh pipeline that clones the source code and builds/packages it.\nCommand codefresh analyze \u0026lt;repoOwner\u0026gt; \u0026lt;repoName\u0026gt; [context]\nArguments    Option Alias Default Description     repoOwner   Repository owner. required   repoName   Repository name. required   context   Your git context that you can get from integrations -\u0026gt; git , if empty - using personal context    Options    Option Alias Type Default Description     --help    Print help information    Examples Analyze repo codefresh analyze elasticio petstore-component-nodejs github\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/analyzer/",
	"title": "Analyzer",
	"tags": [],
	"description": "",
	"content": " Analyze codefresh analyze \u0026lt;repoOwner\u0026gt; \u0026lt;repoName\u0026gt; [context]\nAnalyzes your git repository and creates a proposed Codefresh pipeline that clones the source code and builds/packages it.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/annotations/",
	"title": "Annotations",
	"tags": [],
	"description": "",
	"content": " get codefresh get annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; [labels...]\nGet annotations.\ncreate codefresh create annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; \u0026lt;labels...\u0026gt;\nAnnotate a resource with labels.\ndelete codefresh delete annotation \u0026lt;entity-type\u0026gt; \u0026lt;entity-id\u0026gt; [labels...]\nDelete annotations.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/app-proxy/",
	"title": "App-Proxy",
	"tags": [],
	"description": "",
	"content": " Install codefresh install app-proxy\nInstalls the App-Proxy component on your Kubernetes cluster.\nUninstall codefresh uninstall app-proxy\nDeletes the App-Proxy component from your Kubernetes cluster.\nUpgrade codefresh upgrade app-proxy\nUpgrades an existing App-Proxy.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/approve/",
	"title": "Approve",
	"tags": [],
	"description": "",
	"content": " Description Approve a pending-approval workflow.\napprove \u0026lt;$BUILD_ID\u0026gt;.\nCommand codefresh approve \u0026lt;buildId\u0026gt;\nArguments    Option Alias Default Description     buildId   Build\u0026rsquo;s id. required    Options    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/attach-runtime-environments/",
	"title": "Attach Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description Attach a runtime to agent.\nattach runtime.\nCommand codefresh attach runtime\nOptions    Option Alias Type Default Description     --help    Print help information   --runtime-name    Runtime\u0026rsquo;s name   --agent-name    Agent\u0026rsquo;s name   --agent-id    Agent\u0026rsquo;s ID   --runtime-kube-context-name    Runtime kubernetes context   --runtime-kube-namespace    Runtime\u0026rsquo;s namespace   --runtime-kube-config-path    Path to kubeconfig file for runtime (default is $HOME/.kube/config)   --agent-kube-context-name    Agent kubernetes context   --agent-kube-namespace    Agent\u0026rsquo;s namespace   --agent-kube-service-account    The service account to use for the agent pod   --agent-kube-config-path    Path to kubeconfig file for the agent (default is $HOME/.kube/config)   --restart-agent    restart agent afte install - default false   --platform-only    Set to true to attach runtime to agent on the platform side only   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/audit/",
	"title": "Audit",
	"tags": [],
	"description": "",
	"content": " Download codefresh download audit\nDownload audit.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/board/",
	"title": "Board",
	"tags": [],
	"description": "",
	"content": " Delete board codefresh delete board [id]\nDelete a board.\nUpdate Board codefresh patch board [id]\nUpdate a board.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/boards/",
	"title": "Boards",
	"tags": [],
	"description": "",
	"content": " Get Board codefresh get boards [id..]\nGet a specific board or an array of boards.\nCreate board codefresh create board \u0026lt;name\u0026gt;\nCreate a board.\nYou can create a board specifying name unique for account.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/clusters/",
	"title": "Clusters",
	"tags": [],
	"description": "",
	"content": " Get Clusters codefresh get clusters\nGet an array of clusters.\nDelete Cluster codefresh delete cluster \u0026lt;name\u0026gt;\nDelete a cluster.\nCreate Cluster codefresh create clusters [name]\nCreate a cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/codefresh-cli-components/",
	"title": "Codefresh CLI components",
	"tags": [],
	"description": "",
	"content": " components codefresh components\nCodefresh CLI components\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/components/",
	"title": "Components",
	"tags": [],
	"description": "",
	"content": " Download codefresh components download\nDownload Codefresh CLI components.\nUpdate codefresh components update\nUpdate Codefresh CLI components.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/clusters/create-cluster/",
	"title": "Create Cluster",
	"tags": [],
	"description": "",
	"content": " Description Create a cluster.\nCommand codefresh create clusters [name]\nAliases codefresh create cluster [name]\nOptions    Option Alias Type Default Description     --help    Print help information   --kube-context --kc   kubectl context name. required   --namespace --ns string default Kubernetes namespace to use while looking for service account. required   --serviceaccount --sa string default Kubernetes serviceaccount credentials to be added to Codefresh. required   --behind-firewall  boolean false Specify if the cluster is set behind a firewall    Examples Creating a cluster in codefresh codefresh create cluster --kube-context production\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/",
	"title": "Create Context",
	"tags": [],
	"description": "",
	"content": " Create Config Context codefresh create context config \u0026lt;name\u0026gt;\nCreate a config context.\nCreate Secret Context codefresh create context secret \u0026lt;name\u0026gt;\nCreate a secret context.\nCreate Secret-Yaml Context codefresh create context secret-yaml \u0026lt;name\u0026gt;\nCreate a secret-yaml context.\nCreate Yaml Context codefresh create context yaml \u0026lt;name\u0026gt;\nCreate a yaml context.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/create-runtime-environments/",
	"title": "Create Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description Create a runtime environment.\nCommand codefresh create runtime-environments [cluster]\nAliases codefresh create re [cluster]\ncodefresh create runtime-environment [cluster]\nOptions    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/delete/",
	"title": "Delete",
	"tags": [],
	"description": "",
	"content": " Description Deletes codefresh runner solution\u0026rsquo;s components on kubernetes cluster.\nCommand codefresh runner delete\nOptions    Option Alias Type Default Description     --help    Print help information   --name    Agent\u0026rsquo;s name to be deleted   --url    Codefresh system custom url   --force -f   Run the delete operation without asking to confirm (use with caution!)   --kube-context-name    Name of the kubernetes context from which the Codefresh Agent and Runtime should be removed   --kube-namespace    Name of the kubernetes namespace from which the Codefresh Agent and Runtime should be removed   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --keep-cluster-integration    If true, will not delete dangling cluster integrations from Codefresh   --values    specify values in a YAML file   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/builds/deny/",
	"title": "Deny",
	"tags": [],
	"description": "",
	"content": " Description Deny a pending-approval workflow.\ndeny \u0026lt;$BUILD_ID\u0026gt;.\nCommand codefresh deny \u0026lt;buildId\u0026gt;\nArguments    Option Alias Default Description     buildId   Build\u0026rsquo;s id. required    Options    Option Alias Type Default Description     --help    Print help information    "
},
{
	"uri": "https://codefresh-io.github.io/cli/operate-on-resources/diff/",
	"title": "Diff",
	"tags": [],
	"description": "",
	"content": " Description Show diff between two resources\nSupported resources: runtime-environments.\nCommand codefresh diff\nOptions    Option Alias Type Default Description     --help    Print help information   --filename -f   Filename or directory of spec files use to create the resource    "
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/diff-runtime-environments/",
	"title": "Diff Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Description Show diff between two runtime environments configuration.\nCommand codefresh diff runtime-environments [first-re-name] [first-re-version] [second-re-name] [second-re-version]\nAliases codefresh diff re [first-re-name] [first-re-version] [second-re-name] [second-re-version]\ncodefresh diff runtime-environment [first-re-name] [first-re-version] [second-re-name] [second-re-version]\nOptions    Option Alias Type Default Description     --help    Print help information   --first-name    First runtime environment name   --first-version    First runtime environment version   --second-name    Second runtime environment name   --second-version    Second runtime environment version    "
},
{
	"uri": "https://codefresh-io.github.io/cli/logs/ensures-one-or-more-offline-logs-collections-has-indexes/",
	"title": "Ensures one or more offline-logs collections has indexes",
	"tags": [],
	"description": "",
	"content": " Description Checks whether a collection has indexes and gives the user an option to add them. Adding an index may improve performance of some of the read operations.\nCommand codefresh offline-logs ensure-index\nOptions    Option Alias Type Default Description     --uri  string  Mongodb URI. If not provided, will be parsed from environment variable RUNTIME_MONGO_URI.   --db  string  Database name. If not provided, will be parsed from environment variable RUNTIME_MONGO_DB.   --help    Print help information    Examples undefined codefresh offline-logs ensure-index --uri \u0026quot;mongodb://192.168.99.100:27017\u0026quot; --db logs\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/environments/",
	"title": "Environments",
	"tags": [],
	"description": "",
	"content": " Get Environment codefresh get environments [id..]\nGet a specific environment or an array of environments.\nPassing [id] argument will cause a retrieval of a specific environment.\nIn case of not passing [id] argument, a list will be returned.\nDelete Environment codefresh delete environment \u0026lt;id\u0026gt;\nDelete an environment.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-git-context/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": " bitbucket codefresh create context git bitbucket \u0026lt;name\u0026gt;\nCreate a bitbucket context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create bitbucket context you need to generate application password from here: https://bitbucket.org/account/user/{YOUR-USERNAME}/app-passwords.\ngithub codefresh create context git github \u0026lt;name\u0026gt;\nCreate a github context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create Github context you need to generate the token here: https://github.com/settings/tokens.\ngitlab codefresh create context git gitlab \u0026lt;name\u0026gt;\nCreate a gitlab context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create gitlab context you need to generate the token here: https://gitlab.com/profile/personal_access_tokens.\nstash codefresh create context git stash \u0026lt;name\u0026gt;\nCreate a stash context.\nGit context are used to clone repositories during pipeline execution.\nLearn more about git context here: https://codefresh.io/docs/docs/codefresh-yaml/steps/git-clone/.\nTo create Stash context you need to provider username and password.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/gitops/",
	"title": "Gitops",
	"tags": [],
	"description": "",
	"content": " Install codefresh install gitops \u0026lt;provider\u0026gt;\nInstall gitops.\nUpgrade codefresh upgrade gitops \u0026lt;provider\u0026gt;\nUpgrade gitops agent.\nUninstall codefresh uninstall gitops \u0026lt;provider\u0026gt;\nUninstall gitops agent.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-helm-repository-context/",
	"title": "Helm Repository",
	"tags": [],
	"description": "",
	"content": " From HTTP web server codefresh create context helm-repository http \u0026lt;name\u0026gt;\nCreate a helm-repository context from HTTP server.\n\nA chart repository is an HTTP server that houses an index.yaml file and optionally some packaged charts.\nWhen you\u0026rsquo;re ready to share your charts, the preferred way to do so is by uploading them to a chart repository.\nRead more: https://github.com/kubernetes/helm/blob/master/docs/chart_repository.md.\nFrom AWS S3 bucket codefresh create context helm-repository s3 \u0026lt;name\u0026gt;\nCreate a helm-repository context from s3 bucket.\n\nHelm repository can be stored in AWS S3 bucket.\nCodefresh will integrate with the bucket in the following order\nIf environment variables AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ,AWS_DEFAULT_REGION are set, will use it to create context.\nYou can override them using flags aws-access-key-id aws-secret-access-key aws-default-region.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/init/",
	"title": "Init",
	"tags": [],
	"description": "",
	"content": " Description Install Codefresh Runner solution\u0026rsquo;s components on Kubernetes cluster.\nCommand codefresh runner init\nOptions    Option Alias Type Default Description     --help    Print help information   --name    Agent\u0026rsquo;s name to be created if token is not provided   --token    Registration\u0026rsquo;s token   --url    Codefresh system custom url   --generate-helm-values-file  string  Path to the new generated helm values file   --kube-context-name    Name of the Kubernetes context on which runner should be installed [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-node-selector    The Kubernetes node selector \u0026ldquo;key=value\u0026rdquo; to be used by runner build resources (default is no node selector) (string)   --build-node-selector    The Kubernetes node selector \u0026ldquo;key=value\u0026rdquo; to be used by the Codefresh build resources (default is no node selector)   --yes -y boolean false Use installation defaults (don\u0026rsquo;t ask any questions)   --skip-cluster-test  boolean false Do not test given kubeconfig context to have all the required permission   --skip-cluster-integration  boolean false Do not create a cluster integration in Codefresh   --set-default-runtime  boolean false Set this as the default runtime environment for your Codefresh account   --exec-demo-pipeline  boolean false Run a demo pipeline after the installation completes   --install-monitor  boolean true Install a monitoring component that will help provide valueable data about your cluster to Codefresh   --kube-namespace    Name of the namespace on which runner should be installed [$CF_ARG_KUBE_NAMESPACE]   --tolerations    The Kubernetes tolerations as path to a JSON file prefixed with @ to be used by runner resources (default is no tolerations) (string)   --storage-class-name    Set a name of your custom storage class   --docker-registry  string quay.io The prefix for the container registry that will be used for pulling the required components images. Example: --docker-registry=\u0026ldquo;docker.io\u0026rdquo; default is quay.io   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --values    specify values in a YAML file (see example here: https://github.com/codefresh-io/venona/blob/release-1.0/venonactl/example/values-example.yaml)   --set-value    Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --set-file    Set values for templates from file, example: --set-file Storage.GoogleServiceAccount=/path/to/service-account.json   --http-proxy    http proxy to be used in the runner   --https-proxy    https proxy to be used in the runner   --no-proxy    no_proxy to be used in the runner   --verbose    Print logs   --env-vars    Addiontal env vars to be used in all Codefresh components   --app-proxy  boolean false install app proxy component (default false)   --app-proxy-host  string  the hostname that will be used by the app-proxy ingress   --app-proxy-ingress-class  string  the ingress class that will be used by the app-proxy ingress   --docker-daemon-access  boolean true docker daemon access (default true)   --dry-run  boolean false Will save all of the manifests to be deployed on the cluster to: ./manifests/   --bypass-download  boolean false Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder    Examples See values file example here: https://github.com/codefresh-io/venona/blob/release-1.0/venonactl/example/values-example.yaml) codefresh runner init --values values.yaml\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/install/",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": " Description Install and create an agent on kubernetes cluster.\nCommand codefresh install agent\nOptions    Option Alias Type Default Description     --help    Print help information   --name    Agent\u0026rsquo;s name to be created if token is not provided   --token    Agent\u0026rsquo;s token   --kube-context-name    Name of the kubernetes context on which runner should be installed [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-node-selector    The kubernetes node selector \u0026ldquo;key=value\u0026rdquo; to be used by runner build resources (default is no node selector) (string)   --dry-run    Set to true to simulate installation   --in-cluster    Set flag if runner is been installed from inside a cluster   --kube-namespace    Name of the namespace on which runner should be installed [$CF_ARG_KUBE_NAMESPACE]   --tolerations    The kubernetes tolerations as path to a JSON file to be used by runner resources (default is no tolerations) (string)   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --skip-version-check    Do not compare current runner\u0026rsquo;s version with latest   --install-runtime    Install and attach runtime on the same namespace as the agent (default is false)   --runtime-name    The name of the runtime to install   --build-node-selector    The kubernetes node selector \u0026ldquo;key=value\u0026rdquo; to be used by runner build resources (default is no node selector) (string)   --skip-re-creation    If set to true, will skip runtime creation in the platform   --set-value    Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --set-file    Set values for templates from file, example: --set-file Storage.GoogleServiceAccount=/path/to/service-account.json   --skip-cluster-creation    If set to true, will skip cluster integration creation for this runtime   --make-default-runtime    should all pipelines run on the hybrid runtime (default is false)   --storage-class-name    Set a name of your custom storage class, note: this will not install volume provisioning components   --agent-kube-context-name    Agent kubernetes context (on attach)   --agent-kube-namespace    Agent\u0026rsquo;s namespace (on attach)   --docker-registry  string  The prefix for the container registry that will be used for pulling the required components images. Example: --docker-registry=\u0026ldquo;docker.io\u0026rdquo;   --platform-only    Set to true to create runtime on the platform side only   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/app-proxy/install/",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": " Description Installs the App-Proxy component on your Kubernetes cluster.\nCommand codefresh install app-proxy\nOptions    Option Alias Type Default Description     --help    Print help information   --kube-config-path  string /root/.kube/config Path to kubeconfig file [$KUBECONFIG]   --kube-context-name    Name of the kubernetes context on which the app-proxy should be installed (default: current context) [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-namespace  string  Name of the namespace on which app-proxy should be installed (default: codefresh) [$CF_ARG_KUBE_NAMESPACE]   --runtime-environment  string  The Codefresh runtime-environment that this app-proxy will be associated with   --docker-registry  string docker.io The prefix for the container registry that will be used for pulling the app-proxy component image   --values    specify values in a YAML file   --set-value  array  Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --verbose    Print logs   --host  string  the hostname that will be used by the app-proxy ingress   --ingress-class  string  the ingress class that will be used by the app-proxy ingress   --bypass-download  boolean false Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder    "
},
{
	"uri": "https://codefresh-io.github.io/cli/gitops/install/",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": " Description Install gitops.\nCommand codefresh install gitops \u0026lt;provider\u0026gt;\nArguments    Option Alias Default Description     provider   Gitops provider. required\nPossible values:\n- codefresh\n- argocd-agent    Options    Option Alias Type Default Description     --help    Print help information   --git-integration    Name of git integration in Codefresh   --git-repo-url    Url to manifest repo   --codefresh-integration    Name of gitops integration in Codefresh ( Please create a dedicated context for the agent to avoid hitting the Github rate limits )   --argo-host    Host of argocd installation   --argo-token    Token of argocd installation. Preferred auth method   --argo-username    Username of existing argocd installation. Should be used with argo-password   --argo-password    Password of existing argocd installation. Should be used with argo-username   --update    Update gitops integration if exists   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --kube-context-name    Name of Kubernetes context   --kube-namespace    Namespace in Kubernetes cluster   --in-cluster  boolean false Use this option if gitops provider is been updated from inside a cluster   --output -o   Path to k8s manifest output file, example: -o /home/user/out.yaml   --sync-mode    Synchronization mode    NONE - don\u0026rsquo;t synchronize SELECT - select applications for synchronization CONTINUE_SYNC - continuous synchronization ONE_TIME_SYNC - synchronize one time\nPossible values:\n- NONE\n- SELECT\n- CONTINUE_SYNC\n- ONE_TIME_SYNC --sync-apps | | | | Applications to be synchronized --http-proxy | | | | http proxy to be used in the runner --https-proxy | | | | https proxy to be used in the runner --install-manifest | | string | https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml | Url of argocd install manifest --set-argo-password | | | | Set password for admin user of new argocd installation --codefresh-host | | string | https://g.codefresh.io/ | Codefresh api host --codefresh-agent-suffix | | | | Suffix for agent application\u0026rsquo;s resources. Can be used for installing multiple agents in one namespace --values | | | | Specify values in a YAML file --bypass-download | | boolean | false | Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/monitor/install/",
	"title": "Install",
	"tags": [],
	"description": "",
	"content": " Description Install and create an cluster resources monitor on kubernetes cluster.\nCommand codefresh install monitor\nOptions    Option Alias Type Default Description     --help    Print help information   --cluster-id    Cluster id - freestyle name   --token    Codefresh user token   --kube-config-path  string  Path to kubeconfig file (default is $HOME/.kube/config)   --kube-context-name    Name of the kubernetes context on which monitor should be installed [$CF_ARG_KUBE_CONTEXT_NAME]   --url    Codefresh url, by default https://g.codefresh.io   --kube-namespace    Name of the namespace on which monitor should be installed [$CF_ARG_KUBE_NAMESPACE]   --docker-registry  string  The prefix for the container registry that will be used for pulling the required components images. Example: --docker-registry=\u0026ldquo;docker.io\u0026rdquo;   --values    specify values in a YAML file   --verbose    Print logs   --dry-run  boolean false dry run   --bypass-download  boolean false If the flag is set, then the first attempt (to get the required component) would be by searching for it locally. If the search fails, there will be a download attempt    "
},
{
	"uri": "https://codefresh-io.github.io/cli/install-resources/",
	"title": "Install Resources",
	"tags": [],
	"description": "",
	"content": " Install codefresh install\nInstall a resource\nInstall operation will install codefresh components on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/install-runtime-environment/",
	"title": "Install Runtime-Environment",
	"tags": [],
	"description": "",
	"content": " Description Install and create a runtime on kubernetes cluster.\nCommand codefresh install runtime\nOptions    Option Alias Type Default Description     --help    Print help information   --runtime-name    The name of the runtime to install   --token    Agent\u0026rsquo;s token   --agent-name    Agent\u0026rsquo;s name   --storage-class-name    Set a name of your custom storage class, note: this will not install volume provisioning components   --docker-registry  string  The prefix for the container registry that will be used for pulling the required components images. Example: --docker-registry=\u0026ldquo;docker.io\u0026rdquo;   --set-value    Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --set-file    Set values for templates from file, example: --set-file Storage.GoogleServiceAccount=/path/to/service-account.json   --dry-run    Set to true to simulate installation   --in-cluster    Set flag if runner is been installed from inside a cluster   --kube-node-selector    The kubernetes node selector \u0026ldquo;key=value\u0026rdquo; to be used by runner build resources (default is no node selector) (string)   --runtime-kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --runtime-kube-context-name    Name of the kubernetes context on which the runtime should be installed (default is current-context) [$CF_ARG_KUBE_CONTEXT_NAME]   --runtime-kube-namespace    Name of the namespace on which runtime should be installed [$CF_ARG_KUBE_NAMESPACE]   --build-annotations    The kubernetes metadata.annotations as \u0026ldquo;key=value\u0026rdquo; to be used by runner build resources (default is no node selector)   --attach-runtime    if set to true, auto attach runtime to agent (need to provide \u0026hellip;.)   --agent-kube-config-path    Path to kubeconfig file for the agent (default is $HOME/.kube/config) (on attach)   --agent-kube-context-name    Agent kubernetes context (on attach)   --agent-kube-namespace    Agent\u0026rsquo;s namespace (on attach)   --cluster-service-account    service account for cluster default is default   --make-default-runtime    should all pipelines run on the this runtime (default is false)   --skip-re-creation    If set to true, will skip runtime creation in the platform   --skip-cluster-creation    If set to true, will skip cluster integration creation for this runtime   --platform-only    Set to true to create runtime on the platform side only   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/logs-category/",
	"title": "Logs category",
	"tags": [],
	"description": "",
	"content": " Archives old logs to file or collection. codefresh offline-logs\nManages offline logs.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/logs-category/archives-old-logs-to-file-or-collection./",
	"title": "Logs sub category",
	"tags": [],
	"description": "",
	"content": " Description Manages offline logs.\nCommand codefresh offline-logs\nOptions    Option Alias Type Default Description     --help    Print help information   --uri  string  Mongodb URI. If not provided, will be parsed from environment variable RUNTIME_MONGO_URI.   --db  string  Database name. If not provided, will be parsed from environment variable RUNTIME_MONGO_DB.    "
},
{
	"uri": "https://codefresh-io.github.io/cli/logs/",
	"title": "Logs sub category",
	"tags": [],
	"description": "",
	"content": " Ensures one or more offline-logs collections has indexes codefresh offline-logs ensure-index\nChecks whether a collection has indexes and gives the user an option to add them. Adding an index may improve performance of some of the read operations.\nOffload To Collection codefresh offline-logs offload-to-collection\nArchiving logs from one or more source collections to target collections.\nOffload To File codefresh offline-logs offload-to-file\nArchiving logs from one or more source collections to files by chunks of days.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/monitor/",
	"title": "Monitor",
	"tags": [],
	"description": "",
	"content": " Install codefresh install monitor\nInstall and create an cluster resources monitor on kubernetes cluster.\nUninstall codefresh uninstall monitor\nUninstall an monitor on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/logs/offload-to-collection/",
	"title": "Offload To Collection",
	"tags": [],
	"description": "",
	"content": " Description Archiving logs from one or more source collections to target collections.\nCommand codefresh offline-logs offload-to-collection\nOptions    Option Alias Type Default Description     --uri  string  Mongodb URI. If not provided, will be parsed from environment variable RUNTIME_MONGO_URI.   --db  string  Database name. If not provided, will be parsed from environment variable RUNTIME_MONGO_DB.   --help    Print help information   --targetDB --tdb string  This option is available only for mongodb version 4.2 and up. for older versions it will be ignored. Target database name, if none inserted, db will be defined as target.   --cutoffDate --cod string  The date in ISO format (yyyy-MM-dd) from which logs will be archived (going backwards, including logs from that day).    Examples undefined codefresh offline-logs offload-to-collection --uri \u0026quot;mongodb://192.168.99.100:27017\u0026quot; --db logs --cod \u0026quot;2021-07-08\u0026quot;\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/logs/offload-to-file/",
	"title": "Offload To File",
	"tags": [],
	"description": "",
	"content": " Description Archiving logs from one or more source collections to files by chunks of days.\nCommand codefresh offline-logs offload-to-file\nOptions    Option Alias Type Default Description     --uri  string  Mongodb URI. If not provided, will be parsed from environment variable RUNTIME_MONGO_URI.   --db  string  Database name. If not provided, will be parsed from environment variable RUNTIME_MONGO_DB.   --help    Print help information   --chunkDuration --chdur number 1 Chunk size in days, each chunk will be archived into a different file.   --cutoffDate --cod string  The date in ISO format (yyyy-MM-dd) from which logs will be archived (going backwards, including logs from that day).   --path  string . Directory path to which archive files will be saved.   --collections -c string logs,metadata Source collections names    Examples undefined codefresh offline-logs offload-to-file --uri \u0026quot;mongodb://192.168.99.100:27017\u0026quot; --db logs --collections archive-logs --cod \u0026quot;2021-07-08\u0026quot; --chdur 3 --path \u0026quot;./\u0026quot;\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/registries/registries/",
	"title": "Registries",
	"tags": [],
	"description": "",
	"content": " Get Registries codefresh get registry\nGet an array of accounts registries.\nStandard codefresh create registry standard \u0026lt;name\u0026gt;\nIntegrate a standard container registry into Codefresh.\nDelete Registry codefresh delete registry \u0026lt;ID\u0026gt;\nDelete registry from Codefresh.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/repository/",
	"title": "Repository",
	"tags": [],
	"description": "",
	"content": " Add Repository codefresh add repository [fullname]\nAdd a repository from git context to codefresh.\nGet Repositories codefresh get repository [names..]\nYou can either get codefresh repos (previously added) or any repo from your git context (using option \u0026ldquo;--available\u0026rdquo; and \u0026ldquo;--context\u0026rdquo;).\nDelete Repository codefresh delete repository [name_id]\nRemove repository by name_id (\u0026ldquo;name_id\u0026rdquo; can be retrieved with \u0026ldquo;get\u0026rdquo; command, typically \u0026ldquo;repo_owner/repo_name\u0026rdquo;)\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/",
	"title": "Runner",
	"tags": [],
	"description": "",
	"content": " Execute test pipeline codefresh runner execute-test-pipeline\nExecutes test pipeline.\nInfo codefresh runner info\nGet info on your runner installations.\nDelete codefresh runner delete\nDeletes codefresh runner solution\u0026rsquo;s components on kubernetes cluster.\nInit codefresh runner init\nInstall Codefresh Runner solution\u0026rsquo;s components on Kubernetes cluster.\nUpgrade codefresh runner upgrade\nUpgrades codefresh runner solution\u0026rsquo;s components.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runner-resources/",
	"title": "Runner Resources",
	"tags": [],
	"description": "",
	"content": " Runner codefresh runner\nManage and install runner resources\nManage codefresh runner solution\u0026rsquo;s components on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/",
	"title": "Runtime-Environments",
	"tags": [],
	"description": "",
	"content": " Get Runtime-Environments codefresh get runtime-environments [name]\nGet a runtime environments configuration.\nDelete Runtime-Environments codefresh delete runtime-environments name\nDelete a runtime-environment.\nApply Runtime-Environments codefresh patch runtime-environments [name]\napply changes to runtime-environments resource.\nUse apply to patch an existing context.\nAttach Runtime-Environments codefresh attach runtime\nAttach a runtime to agent.\nattach runtime.\nCreate Runtime-Environments codefresh create runtime-environments [cluster]\nCreate a runtime environment.\nDiff Runtime-Environments codefresh diff runtime-environments [first-re-name] [first-re-version] [second-re-name] [second-re-version]\nShow diff between two runtime environments configuration.\nInstall Runtime-Environment codefresh install runtime\nInstall and create a runtime on kubernetes cluster.\nUninstall Runtime-Environment codefresh uninstall runtime\nUninstall a runtime on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments-base-images/",
	"title": "Runtime-Environments-Base-Images",
	"tags": [],
	"description": "",
	"content": " Get Runtime-Environment-Base-Images codefresh get runtime-environment-base-images [name]\nGet a runtime environment base images list that required by this runtime.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/create-context/create-secret-store-context/",
	"title": "Secret-Store",
	"tags": [],
	"description": "",
	"content": " hashicorp-vault codefresh create context secret-store hashicorp-vault \u0026lt;name\u0026gt;\nCreate a Hashicorp Vault secret-store context.\nSecret-Store context are used during pipeline execution as API to resolve variables that are parse of Codefresh.\nkubernetes-runtime codefresh create context secret-store kubernetes-runtime \u0026lt;name\u0026gt;\nCreate a secret-store Kubernetes-Runtime context.\nCreate a secret store to use hybrid runtime to access K8S secret/configmap and use it as secret store.\nkubernetes codefresh create context secret-store kubernetes \u0026lt;name\u0026gt;\nCreate a secret-store Kubernetes context.\nSecret-Store context are used during pipeline execution as API to resolve variables that are parse of Codefresh.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/section/",
	"title": "Section",
	"tags": [],
	"description": "",
	"content": " Delete section codefresh delete section [id]\nDelete a section.\nUpdate Section codefresh patch section [id]\nUpdate a section.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/sections/",
	"title": "Sections",
	"tags": [],
	"description": "",
	"content": " Get Section codefresh get sections [id]\nGet a specific section or an array of sections.\nCreate section codefresh create section \u0026lt;name\u0026gt;\nCreate a section.\nYou can create a section specifying name unique for account.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/show-config/",
	"title": "Show Config",
	"tags": [],
	"description": "",
	"content": " Description Codefresh CLI configuration. Uses profiles\nCLI configuration is used for user-specific properties, for example pretty-print.\nCommand codefresh cli-config\nOptions    Option Alias Type Default Description     --help    Print help information   --output -o   Output format    Examples Print configuration for current profile codefresh cli-config\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/step-types/",
	"title": "Step-types",
	"tags": [],
	"description": "",
	"content": " Delete Step-type codefresh delete step-type [name]\nDelete a step-type.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/steps/",
	"title": "Steps",
	"tags": [],
	"description": "",
	"content": " Get Step codefresh get step-types [id..]\nGet a specific step or an array of steps.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/synchronize-teams/",
	"title": "Synchronize Teams",
	"tags": [],
	"description": "",
	"content": " Description Synchronize team with group.\nCommand codefresh synchronize teams [client-name]\nAliases codefresh synchronize team [client-name]\ncodefresh synchronize tm [client-name]\nArguments    Option Alias Default Description     client-name n  Client name. required    Options    Option Alias Type Default Description     --help    Print help information   --client-type -t   Client type like github, okta, azure. required   --access-token --tk   Github Personal Access Token that overrides the default one (Optional and only valid for Github)   --disable-notifications --no-notify boolean false Disable email notifications of builds status for users    Examples Synchronize team with group codefresh synchronize teams [client-name] -t [client-type] --tk [accessToken]\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/tokens/",
	"title": "Tokens",
	"tags": [],
	"description": "",
	"content": " Create tokens codefresh create token [name]\nGenerate Codefresh token.\nCreate default token or provide --type and --subject. See options for more details.\nGet tokens codefresh get tokens [names|ids..]\nGet Codefresh tokens.\nProvide names/ids to filter results by them.\nPatch token codefresh patch tokens \u0026lt;id\u0026gt;\nPatch Codefresh token.\nUpdate token name or scopes using token id. Id can be retrieved using \u0026ldquo;get\u0026rdquo; command.\nDelete tokens codefresh delete tokens [ids..]\nRevoke Codefresh token.\nProvide one or many token ids to delete. Ids can be retrieved with \u0026ldquo;get\u0026rdquo; command.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/agents/uninstall/",
	"title": "Uninstall",
	"tags": [],
	"description": "",
	"content": " Description Uninstall an agent on kubernetes cluster.\nCommand codefresh uninstall agent\nOptions    Option Alias Type Default Description     --help    Print help information   --name    Agent\u0026rsquo;s name to be uninstalled   --kube-context-name    Name of the kubernetes context on which venona should be uninstalled [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-namespace    Name of the namespace on which venona should be uninstalled [$CF_ARG_KUBE_NAMESPACE]   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/app-proxy/uninstall/",
	"title": "Uninstall",
	"tags": [],
	"description": "",
	"content": " Description Deletes the App-Proxy component from your Kubernetes cluster.\nCommand codefresh uninstall app-proxy\nOptions    Option Alias Type Default Description     --help    Print help information   --kube-context-name    Name of the kubernetes context on which the app-proxy is installed (default: current context) [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-namespace    Name of the kubernetes namespace from which the App-Proxy and Runtime should be removed   --kube-config-path  string /root/.kube/config Path to kubeconfig file (default is $HOME/.kube/config)   --runtime-environment  string  The Codefresh runtime-environment that this App-Proxy will be associated with   --force -f   Run the delete operation without asking to confirm (use with caution!)   --values    specify values in a YAML file   --set-value  array  Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --verbose    Print logs   --bypass-download  boolean false Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder    "
},
{
	"uri": "https://codefresh-io.github.io/cli/gitops/uninstall/",
	"title": "Uninstall",
	"tags": [],
	"description": "",
	"content": " Description Uninstall gitops agent.\nCommand codefresh uninstall gitops \u0026lt;provider\u0026gt;\nArguments    Option Alias Default Description     provider   Gitops provider. required\nPossible values:\n- codefresh\n- argocd-agent    Options    Option Alias Type Default Description     --help    Print help information   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --kube-context-name    Name of Kubernetes context   --kube-namespace    Namespace in Kubernetes cluster   --install-manifest  string https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml Url of argocd install manifest   --in-cluster  boolean false Use this option if gitops provider is been updated from inside a cluster    "
},
{
	"uri": "https://codefresh-io.github.io/cli/monitor/uninstall/",
	"title": "Uninstall",
	"tags": [],
	"description": "",
	"content": " Description Uninstall an monitor on kubernetes cluster.\nCommand codefresh uninstall monitor\nOptions    Option Alias Type Default Description     --help    Print help information   --kube-context-name    Name of the kubernetes context on which monitor should be uninstalled [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-namespace    Name of the namespace on which monitor should be uninstalled [$CF_ARG_KUBE_NAMESPACE]   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/uninstall-resources/",
	"title": "Uninstall Resources",
	"tags": [],
	"description": "",
	"content": " Uninstall codefresh uninstall\nUninstall a resource\nUninstall operation will uninstall codefresh components on kubernetes cluster.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runtime-environments/uninstall-runtime-environment/",
	"title": "Uninstall Runtime-Environment",
	"tags": [],
	"description": "",
	"content": " Description Uninstall a runtime on kubernetes cluster.\nCommand codefresh uninstall runtime\nOptions    Option Alias Type Default Description     --help    Print help information   --agent-name    Agent\u0026rsquo;s name to be uninstalled   --name    Runtime\u0026rsquo;s name to be uninstalled   --agent-id    Agent\u0026rsquo;s ID   --runtime-kube-context-name    Name of the kubernetes context on which venona should be uninstalled [$CF_ARG_KUBE_CONTEXT_NAME]   --runtime-kube-namespace    Name of the namespace on which venona should be uninstalled [$CF_ARG_KUBE_NAMESPACE]   --runtime-kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --agent-kube-context-name    Agent kubernetes context   --agent-kube-namespace    Agent\u0026rsquo;s namespace   --agent-kube-config-path    Path to kubeconfig file for the agent (default is $HOME/.kube/config)   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/app-proxy/upgrade/",
	"title": "Upgrade",
	"tags": [],
	"description": "",
	"content": " Description Upgrades an existing App-Proxy.\nCommand codefresh upgrade app-proxy\nOptions    Option Alias Type Default Description     --help    Print help information   --kube-context-name    Name of the kubernetes context on which the app-proxy is installed (default: current context) [$CF_ARG_KUBE_CONTEXT_NAME]   --kube-namespace    Name of the kubernetes namespace from which the App-Proxy and Runtime should be removed   --kube-config-path  string /root/.kube/config Path to kubeconfig file (default is $HOME/.kube/config)   --values    specify values in a YAML file   --set-value  array  Set values for templates, example: --set-value LocalVolumesDir=/mnt/disks/ssd0/codefresh-volumes   --verbose    Print logs   --bypass-download  boolean false Will bypass the attempt to download the installer. Instead, will immediately attempt to use the binary from the components folder    "
},
{
	"uri": "https://codefresh-io.github.io/cli/gitops/upgrade/",
	"title": "Upgrade",
	"tags": [],
	"description": "",
	"content": " Description Upgrade gitops agent.\nCommand codefresh upgrade gitops \u0026lt;provider\u0026gt;\nArguments    Option Alias Default Description     provider   Gitops provider. required\nPossible values:\n- codefresh\n- argocd-agent    Options    Option Alias Type Default Description     --help    Print help information   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --kube-namespace    Name of the namespace on which Argo agent should be updated   --kube-context-name    Name of the kubernetes context where Argo agent should be updated (default is current-context)   --in-cluster  boolean false Use this option if gitops provider is been updated from inside a cluster    Examples Update gitops agent codefresh upgrade gitops argocd-agent\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/runner/upgrade/",
	"title": "Upgrade",
	"tags": [],
	"description": "",
	"content": " Description Upgrades codefresh runner solution\u0026rsquo;s components.\nCommand codefresh runner upgrade\nOptions    Option Alias Type Default Description     --help    Print help information   --agent-name    The name of the agent to be upgraded or created   --runtime-name    The name of the runtime to be upgraded   --url  string https://g.codefresh.io Codefresh system custom url   --kube-context-name    Name of the kubernetes context from which the Codefresh Agent and Runtime should be removed   --kube-namespace    Name of the kubernetes namespace from which the Codefresh Agent and Runtime should be removed   --kube-config-path    Path to kubeconfig file (default is $HOME/.kube/config)   --install-monitor  boolean true Install a monitoring component that will help provide valueable data about your cluster to Codefresh (only useable when running migration)   --verbose    Print logs    "
},
{
	"uri": "https://codefresh-io.github.io/cli/validation/validate-pipeline-yaml/",
	"title": "Validate pipeline yaml",
	"tags": [],
	"description": "",
	"content": " Description Validate codefresh pipeline yaml config files\nValidate one or many pipeline yaml files or attach validator to one and validate on changes.\nCommand codefresh validate [filenames..]\nArguments    Option Alias Default Description     filenames   Paths to yaml files. required    Options    Option Alias Type Default Description     --help    Print help information   --attach -a   Attach validator to the file and validate on change    "
},
{
	"uri": "https://codefresh-io.github.io/cli/validation/",
	"title": "Validation",
	"tags": [],
	"description": "",
	"content": " Validate pipeline yaml codefresh validate [filenames..]\nValidate codefresh pipeline yaml config files\nValidate one or many pipeline yaml files or attach validator to one and validate on changes.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/workflow-data/",
	"title": "Workflow-Data",
	"tags": [],
	"description": "",
	"content": " Get codefresh get workflow-data-item [id..]\nGet Workflow Data Item.\nPassing [id] argument will cause a retrieval of a specific Workflow-Data-Item.\nCreate codefresh create workflow-data-item\nCreate New Workflow Data Item.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/compositions/",
	"title": "Compositions",
	"tags": [],
	"description": "",
	"content": " Get Composition codefresh get compositions [id|name..]\nGet a specific composition or an array of compositions.\nPassing [id|name] argument will cause a retrieval of a specific composition.\nIn case of not passing [id|name] argument, a list will be returned.\nCreate Composition codefresh create composition \u0026lt;name\u0026gt;\nCreate a composition.\nDelete Composition codefresh delete composition \u0026lt;name\u0026gt;\nDelete a composition.\nReplace Composition codefresh replace composition [name]\nReplace a composition resource.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/get-config-properties/",
	"title": "Get Config Properties",
	"tags": [],
	"description": "",
	"content": " Description For current profile get all properties containing provided \u0026ldquo;name\u0026rdquo;\nUsed when you may need to know some exact properties values.\nCommand codefresh cli-config get [name]\nArguments    Option Alias Default Description     name   Property name    Options    Option Alias Type Default Description     --output -o   Output format   --help    Print help information    Examples Print available property names codefresh cli-config get\nPrint properties, containing \u0026ldquo;output\u0026rdquo; word codefresh cli-config get output\nPrint properties, containing \u0026ldquo;output.pretty\u0026rdquo; path codefresh cli-config get output.pretty\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/set-config-property/",
	"title": "Set Config Property",
	"tags": [],
	"description": "",
	"content": " Description For current profile set an available property\nCommand codefresh cli-config set [name] [value]\nArguments    Option Alias Default Description     name   Property name   value   Property value    Options    Option Alias Type Default Description     --output -o   Output format   --help    Print help information    Examples Print available property names codefresh cli-config set\nSet \u0026ldquo;output.pretty\u0026rdquo; property codefresh cli-config set output.pretty false\nSet \u0026ldquo;request.maxRetries\u0026rdquo; property codefresh cli-config set request.maxRetries 10\nSet \u0026ldquo;request.retryDelay\u0026rdquo; property codefresh cli-config set request.retryDelay 500\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/helm-repos/",
	"title": "Helm Repos",
	"tags": [],
	"description": "",
	"content": " Get Helm Repo codefresh get helm-repo [name..]\nGet a specific helm-repo or an array of helm-repos.\nCreate Helm Repo codefresh create helm-repo [name]\nCreate a Codefresh managed helm repo.\nATM it is only possible to create a helm repository against Codefresh managed helm registry.\nDelete Helm Repo codefresh delete helm-repo [name]\nDelete a helm repo.\nUpdate Helm Repo codefresh patch helm-repo [name]\nUpdate a helm repo.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/predefined-pipelines/",
	"title": "Predefined Pipelines",
	"tags": [],
	"description": "",
	"content": " Delete Helm Release codefresh delete-release \u0026lt;name\u0026gt;\nDelete a helm release from a kubernetes cluster.\nRollback Helm Release codefresh rollback-release \u0026lt;name\u0026gt;\nRollback a helm release from a kubernetes cluster.\nSet Helm config codefresh set-helm-config \u0026lt;cluster\u0026gt;\nSet Helm config.\nInstall or Upgrade Helm Chart codefresh install-chart\nInstall or upgrade a Helm chart Repository flag can be either absolute url or saved repository in Codefresh.\nPromote Helm Release codefresh helm-promotion\nPromote a Helm release in another environment.\nTest Helm Release codefresh test-release \u0026lt;name\u0026gt;\nTest a helm release.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/profiles/",
	"title": "Profiles",
	"tags": [],
	"description": "",
	"content": " Description Change cli-config profile\nUsing profiles gives an ability to switch fast between the different configuration sets.\nCommand codefresh cli-config profile [name]\nArguments    Option Alias Default Description     name   Profile name    Options    Option Alias Type Default Description     --output -o   Output format   --help    Print help information    Examples Use or create profile with name \u0026ldquo;myProfile\u0026rdquo; codefresh cli-config profile myProfile\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/",
	"title": "CLI Config",
	"tags": [],
	"description": "",
	"content": " Show Config codefresh cli-config\nCodefresh CLI configuration. Uses profiles\nCLI configuration is used for user-specific properties, for example pretty-print.\nGet Config Properties codefresh cli-config get [name]\nFor current profile get all properties containing provided \u0026ldquo;name\u0026rdquo;\nUsed when you may need to know some exact properties values.\nSet Config Property codefresh cli-config set [name] [value]\nFor current profile set an available property\nProfiles codefresh cli-config profile [name]\nChange cli-config profile\nUsing profiles gives an ability to switch fast between the different configuration sets.\nDescribe Config Properties codefresh cli-config help [name]\nShow help for properties. Used when you may need to know some properties types, defaults, description etc.\nUsed when you may need to know some properties types, defaults, description etc.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/cli-config/describe-config-properties/",
	"title": "Describe Config Properties",
	"tags": [],
	"description": "",
	"content": " Description Show help for properties. Used when you may need to know some properties types, defaults, description etc.\nUsed when you may need to know some properties types, defaults, description etc.\nCommand codefresh cli-config help [name]\nArguments    Option Alias Default Description     name   Property name    Options    Option Alias Type Default Description     --output -o   Output format   --help    Print help information    Examples Print help for all properties codefresh cli-config help\nPrint help for properties, containing \u0026ldquo;output\u0026rdquo; word codefresh cli-config help output\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/more/",
	"title": "More...",
	"tags": [],
	"description": "",
	"content": " Image Pull Secret codefresh generate image-pull-secret\nGenerate image pull secret on Kubernetes cluster from integrated Docker registry.\n\nFor Kuberentes cluster to pull an image from your private registry it needs special secret typed as kubernetes.io/dockercfg.\nAfter this secret been created you can use them in pod template that lives in the same namespace.\nYou can generate this secret from any integrated Docker registry on your account.\nMore information about image pull secret can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/teams/",
	"title": "Teams",
	"tags": [],
	"description": "",
	"content": " Get Teams codefresh get teams\nGet an array of all current user teams.\nCreate team codefresh create teams \u0026lt;name\u0026gt;\nCreate a team.\nYou can create a new team specifying only name of team or specify path to json file for include extended options\nPossible fields in file:\nname - team name (specifying name in file will rewrite name specified as command argument) users - array of users id for that team tags - array of tag names.\nRemove user codefresh delete teams\nRemove user from team.\nPass user id and team id to remove user from team.\nAdd user codefresh patch teams\nAssign user to a team.\nUse patch command and pass user id and team id to assign user to a team.\nSynchronize Teams codefresh synchronize teams [client-name]\nSynchronize team with group.\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "Codefresh CLI\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://codefresh-io.github.io/cli/external-resources/",
	"title": "External Resources",
	"tags": [],
	"description": "Hugo-built Sites with docdock theme",
	"content": " https://codefresh.io/blog/introducing-codefresh-cli/ by Dan Garfield "
},
{
	"uri": "https://codefresh-io.github.io/cli/registries/",
	"title": "Registries",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://codefresh-io.github.io/cli/contexts/spec/",
	"title": "Spec",
	"tags": [],
	"description": "",
	"content": " A Context needs .apiVersion, .kind, and .metadata fields.\nA Context also needs a .spec section.\nOwner A context can be either attached to a user or to an account.\n.owner can be either account or user. The default is account. Type .spec.type should be one of the following:  config  secret  yaml  secret-yaml  helm-repository  \nData .spec.data should be different according to the type of the context\n"
},
{
	"uri": "https://codefresh-io.github.io/cli/pipelines/spec/",
	"title": "Spec",
	"tags": [],
	"description": "",
	"content": " A Pipeline needs .version, .kind, and .metadata fields.\nA Pipeline also needs a .spec section.\nExamples Use create/replace/delete commands to manage your pipeline\n# create pipeline codefresh create -f pipeline.yaml # get created/modified pipeline spec codefresh get pipeline \u0026lt;name\u0026gt; -o yaml \u0026gt; pipeline.yaml # update pipeline with modified pipeline spec codefresh replace -f pipeline.yaml # delete pipeline using spec file codefresh delete -f pipeline.yaml See the examples of pipeline spec below to manage your pipelines.\nBasic pipeline with cron triggers in spec version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: cron spec: cronTriggers: - name: every minute type: cron message: every minute expression: 0/1 * 1/1 * * steps: test: image: alpine commands: - echo test Basic pipeline with cron triggers with variables version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: cron spec: cronTriggers: - name: every minute type: cron message: every minute expression: 0/1 * 1/1 * * variables: - key: TEST_VAR value: \u0026#39;my-test\u0026#39; steps: test: image: alpine commands: - echo ${{TEST_VARIABLE}} Basic pipeline with cron triggers with run options version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: cron spec: cronTriggers: - name: every minute type: cron message: every minute expression: 0/1 * 1/1 * * options: resetVolume: true steps: test: image: alpine commands: - echo test \u0026gt;\u0026gt; test.txt - cat test.txt Pipeline started by cron trigger but simulating the git trigger Note that spec.triggers.0.id and spec.cronTriggers.gitTriggerId should be the same value and a valid ObjectId.\nversion: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: cron spec: triggers: - type: git name: test repo: repo-owner/repo-name events: - push.heads pullRequestAllowForkEvents: false commentRegex: /.*/gi branchRegex: /.*/gi branchRegexInput: regex provider: git-context-name id: 65329431edb87250ff128acc cronTriggers: - name: every minute type: cron message: every minute expression: 0/1 * 1/1 * * gitTriggerId: 65329431edb87250ff128acc branch: master steps: test: image: alpine commands: - echo ${{CF_BRANCH}} Disable cron trigger in pipeline version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: cron spec: cronTriggers: - name: every minute type: cron message: every minute expression: 0/1 * 1/1 * * disabled: true steps: test: image: alpine commands: - echo test Basic Pipeline with clone step and git trigger version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: basic-pipeline spec: triggers: - type: git name: test repo: repo-owner/repo-name events: - push.heads pullRequestAllowForkEvents: false commentRegex: /.*/gi branchRegex: /.*/gi branchRegexInput: regex provider: git-context-name variables: - key: PORT value: \u0026#39;3000\u0026#39; - key: SECRET value: \u0026#39;secret-value\u0026#39; encrypted: true steps: clone_step: repo: codefresh-contrib/python-flask-sample-app revision: master type: git-clone git: CF-default test_step_1: image: alpine working_directory: \u0026#39;${{clone_step}}\u0026#39; commands: - echo ls - echo \u0026#34;hello world\u0026#34; - echo \u0026#34;plain value $PORT\u0026#34; - echo \u0026#34;encrypted value $PAPA\u0026#34; - echo \u0026#34;value from context $COOKIE\u0026#34; build: type: build working_directory: \u0026#39;${{clone_step}}\u0026#39; dockerfile: ./Dockerfile image_name: my-custom-docker-image tag: bla Pipeline with a remote spec template brought from a git repository version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: basic-pipeline spec: triggers: - type: git name: test repo: repo-owner/repo-name events: - push.heads pullRequestAllowForkEvents: false commentRegex: /.*/gi branchRegex: /.*/gi branchRegexInput: regex provider: git-context-name contexts: [] variables: - key: PORT value: \u0026#39;3000\u0026#39; - key: SECRET value: \u0026#39;secret-value\u0026#39; encrypted: true specTemplate: location: git context: git-context-name # if not specified will use the default git-context repo: codefresh-io/cli path: codefresh.yml revision: master # can be a branch or commit. if not specified will use CF_BRANCH variable value Pipeline with a remote spec template from a public git URL version: \u0026#39;1.0\u0026#39; kind: pipeline metadata: name: basic-pipeline spec: triggers: - type: git name: test repo: repo-owner/repo-name events: - push.heads pullRequestAllowForkEvents: false commentRegex: /.*/gi branchRegex: /.*/gi branchRegexInput: regex provider: git-context-name contexts: [] variables: - key: PORT value: \u0026#39;3000\u0026#39; - key: SECRET value: \u0026#39;secret-value\u0026#39; encrypted: true specTemplate: location: url url: \u0026#39;https://raw.githubusercontent.com/codefresh-io/cli/master/codefresh.yml\u0026#39;"
},
{
	"uri": "https://codefresh-io.github.io/cli/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]