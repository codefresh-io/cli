version: '1.0'

steps:

  extract_version:
    title: "Exporting package.json version"
    image: codefresh/cli-build
    commands:
      - 'export PACKAGE_VERSION=$(jq -r ".version" package.json)'
      - "echo Current version: $PACKAGE_VERSION"
      - "cf_export PACKAGE_VERSION"

  build_executables:
    title: "Compiling executables"
    image: codefresh/cli-build
    commands:
      - "rm -rf dist"
      - "yarn install"
      - "yarn pkg"

  create_release:
    title: "Create github release"
    image: codefresh/cli-build
    fail_fast: false
    commands:
      - 'curl --fail -X POST -d ''{"tag_name":"v${{PACKAGE_VERSION}}","target_commitish":"${{CF_REVISION}}","name":"Codefresh V${{PACKAGE_VERSION}}"}'' -H "Content-Type: application/json" -H "Authorization: token ${{TOKEN}}" https://api.github.com/repos/codefresh-io/codefresh/releases'
    when:
      branch:
        only: [ master ]

  create_prerelease:
    title: "Create github release"
    image: codefresh/cli-build
    fail_fast: false
    commands:
      - 'curl --fail -X POST -d ''{"draft":"true","tag_name":"${{PACKAGE_VERSION}}","target_commitish":"${{CF_REVISION}}","name":"Codefresh V${{PACKAGE_VERSION}}"}'' -H "Content-Type: application/json" -H "Authorization: token ${{TOKEN}}" https://api.github.com/repos/codefresh-io/codefresh/releases'
    when:
      branch:
        ignore: [ master ]

  get_release:
    title: "Get github release"
    image: codefresh/cli-build
    commands:
      - "export GITHUB_RELEASE_ID=$(curl --fail https://api.github.com/repos/codefresh-io/codefresh/releases/tags/v${{PACKAGE_VERSION}} | jq -r '.id')"
      - "echo Github release id: $GITHUB_RELEASE_ID"
      - "cf_export GITHUB_RELEASE_ID"

  upload_executables:
    title: "Upload executables to github release"
    image: codefresh/cli-build
    commands:
# upload linux-x64 asset
      - "rm -rf codefresh-v${{PACKAGE_VERSION}}-linux-x64.tar"
      - "tar -cf codefresh-v${{PACKAGE_VERSION}}-linux-x64.tar README.md LICENSE -C ./dist ./codefresh-linux-x64 "
      - "gzip codefresh-v${{PACKAGE_VERSION}}-linux-x64.tar"
      - 'curl --fail -X POST -H "Content-Type:application/octet-stream" -H "Authorization: token ${{TOKEN}}"  --data-binary @codefresh-v${{PACKAGE_VERSION}}-linux-x64.tar.gz https://uploads.github.com/repos/codefresh-io/codefresh/releases/${{GITHUB_RELEASE_ID}}/assets?name=codefresh-v${{PACKAGE_VERSION}}-linux-x64.tar.gz'

  push_to_registry_version:
    title: "Update dockerhub image latest tag"
    type: push
    candidate: r.cfcr.io/codefresh-inc/codefresh/cli:${{CF_SHORT_REVISION}}
    image_name: codefresh/cli
    tag: ${{PACKAGE_VERSION}}
    registry: dockerhub
    when:
      branch:
        only: [ master ]

  push_to_registry_latest:
    title: "Update dockerhub image latest tag"
    type: push
    candidate: r.cfcr.io/codefresh-inc/codefresh/cli:${{CF_SHORT_REVISION}}
    tag: latest
    registry: dockerhub
    when:
      branch:
        only: [ master ]

  deploy_to_npm:
    title: "Publishing To Npm"
    image: codefresh/npm-publish:master
    commands:
      - NPM_TOKEN=${{NPM_TOKEN}} npm run ci-publish
    when:
      branch:
        only: [ master ]
