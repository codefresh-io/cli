{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Codefresh api team",
      "url": "http://www.codefresh.io"
    },
    "description": "Codefresh api openapi-3.0 specification",
    "termsOfService": "http://www.codefresh.io",
    "title": "Codefresh API",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://g.codefresh.io/api"
    }
  ],
  "paths": {
    "/abac": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "getAllRules1",
        "summary": "getAllRules",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getAllRules()"
          }
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "createRule1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "action": {
                    "type": "string"
                  },
                  "resource": {
                    "type": "string"
                  },
                  "team": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "createRule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRule(body)"
          }
        ],
        "parameters": []
      }
    },
    "/abac/batch": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "createOrDeleteRules1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "create": {
                    "items": {
                      "$ref": "#/components/requestBodies/abac"
                    },
                    "type": "array"
                  },
                  "delete": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "createOrDeleteRules",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createOrDeleteRules(body)"
          }
        ],
        "parameters": []
      }
    },
    "/abac/resource/{resource}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the resource",
            "in": "path",
            "name": "resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "getRulesByResource1",
        "summary": "getRulesByResource",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRulesByResource({ resource })"
          }
        ]
      }
    },
    "/abac/tags/rule/{rule}": {
      "post": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "updateRuleTags1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "updateRuleTags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.updateRuleTags({ rule }, body)"
          }
        ]
      }
    },
    "/abac/tags/rules": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "createRulesTags1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "rules": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "createRulesTags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRulesTags(body)"
          }
        ],
        "parameters": []
      }
    },
    "/abac/team/{team}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "getRulesByTeamId1",
        "summary": "getRulesByTeamId",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRulesByTeamId({ team })"
          }
        ]
      }
    },
    "/abac/teamRules": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "createRulesInBatch1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/abac"
              }
            }
          },
          "required": true
        },
        "summary": "createRulesInBatch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRulesInBatch(body)"
          }
        ],
        "parameters": []
      }
    },
    "/abac/{rule}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "deleteRule1",
        "summary": "deleteRule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.deleteRule({ rule })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "getRule1",
        "summary": "getRule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRule({ rule })"
          }
        ]
      }
    },
    "/accounts/{accountId}/{userId}": {
      "delete": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "deleteUserFromAccount1",
        "summary": "deleteUserFromAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteUserFromAccount({ accountId, userId })"
          }
        ]
      }
    },
    "/accounts/{accountId}/{userId}/adduser": {
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "addExistingUserToAccount1",
        "summary": "addExistingUserToAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addExistingUserToAccount({ accountId, userId })"
          }
        ]
      }
    },
    "/accounts/{accountId}/{userId}/admin": {
      "delete": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "deleteAdmin1",
        "summary": "deleteAdmin",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteAdmin({ accountId, userId })"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "aetAsAdmin1",
        "summary": "aetAsAdmin",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.aetAsAdmin({ accountId, userId })"
          }
        ]
      }
    },
    "/accounts/{id}/adduser": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Adds a not existing user to an account. the provider field is optional and if not provided it will be taken from the account model",
        "operationId": "addUserToAccount1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userDetails": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "addUserToAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addUserToAccount({ id }, body)"
          }
        ]
      }
    },
    "/accounts/{id}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet: update the user defined account fields. Receives a settings object (will be defined later)",
        "operationId": "updateAccountPublicSettings1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "notifications": {
                    "items": {
                      "properties": {
                        "events": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "slack": {
                          "properties": {
                            "uri": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "enum": [
                            "webhook",
                            "slack"
                          ],
                          "type": "string"
                        },
                        "webhook": {
                          "properties": {
                            "method": {
                              "type": "string"
                            },
                            "uri": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "updateAccountPublicSettings",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateAccountPublicSettings({ id }, body)"
          }
        ]
      }
    },
    "/accounts/{id}/updateuser": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "updateUserDetails1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "updateUserDetails",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateUserDetails({ id }, body)"
          }
        ]
      }
    },
    "/accounts/{id}/users": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Get all users of an account",
        "operationId": "getUsersForAccount1",
        "summary": "getUsersForAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getUsersForAccount({ id })"
          }
        ]
      }
    },
    "/admin/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "get all the accounts in the system",
        "operationId": "getAllAccounts1",
        "summary": "getAllAccounts",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getAllAccounts()"
          }
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Add new account. Receives an account object ",
        "operationId": "addAccount1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "addAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addAccount(body)"
          }
        ],
        "parameters": []
      }
    },
    "/admin/accounts/addpendinguser": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "addPendingUserWithoutAccount1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "provider": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "userName": {
                    "type": "string"
                  }
                },
                "required": [
                  "userName",
                  "provider"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "addPendingUserWithoutAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addPendingUserWithoutAccount(body)"
          }
        ],
        "parameters": []
      }
    },
    "/admin/accounts/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "deleteAccount1",
        "summary": "deleteAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteAccount({ id })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Get an account by id",
        "operationId": "getById1",
        "summary": "getById",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getById({ id })"
          }
        ]
      }
    },
    "/admin/accounts/{id}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet: Update the account info that only codefresh admins (codefresh employees, not account admin) can access",
        "operationId": "updateAccount1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "updateAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateAccount({ id }, body)"
          }
        ]
      }
    },
    "/admin/runtime-environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "getAll1",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountIds",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getAll({ limit, offset, accountIds })"
          }
        ]
      }
    },
    "/admin/runtime-environments/account/default/{account}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "setDefaultForAccount1",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "setDefaultForAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.setDefaultForAccount({ account, name })"
          }
        ]
      }
    },
    "/admin/runtime-environments/account/{account}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "getByAccount1",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountIds",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getByAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getByAccount({ account, limit, offset, accountIds })"
          }
        ]
      }
    },
    "/admin/runtime-environments/default/{plan}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "setDefault1",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "setDefault",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.setDefault({ plan, name })"
          }
        ]
      }
    },
    "/admin/runtime-environments/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "updateSysRe1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "updateSysRe",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.updateSysRe({ name, extend, description }, body)"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "deleteSysRe1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "deleteSysRe",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.deleteSysRe({ name, force })"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "getSysRe1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "successors",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getSysRe",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getSysRe({ name, version, extend, history, successors })"
          }
        ]
      }
    },
    "/admin/runtime-environments/{plan}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "update1",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.update({ plan, name, extend, description }, body)"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "delete1",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.delete({ plan, name, force })"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "get1",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "successors",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.get({ plan, name, version, extend, history, successors })"
          }
        ]
      }
    },
    "/auth/key": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "generate1",
        "parameters": [
          {
            "in": "query",
            "name": "subjectType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subjectReference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "generate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.generate({ subjectType, subjectReference }, body)"
          }
        ]
      }
    },
    "/auth/key/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "delete2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.delete({ id })"
          }
        ]
      }
    },
    "/auth/keys": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "getAll2",
        "parameters": [],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.getAll()"
          }
        ]
      }
    },
    "/builds": {
      "get": {
        "parameters": [
          {
            "description": "account name",
            "in": "query",
            "name": "account",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "repo owner",
            "in": "query",
            "name": "repoOwner",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "repo name",
            "in": "query",
            "name": "repoName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "builds"
        ],
        "operationId": "getAll3",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.builds.getAll({ account, repoOwner, repoName })"
          }
        ]
      }
    },
    "/builds/rebuild/{id}": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "builds"
        ],
        "operationId": "rebuild1",
        "summary": "rebuild",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.builds.rebuild({ id })"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "restart1",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "summary": "restart",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.restart({ id })"
          }
        ]
      }
    },
    "/builds/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "get2",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.get({ id })"
          }
        ]
      }
    },
    "/builds/{buildId}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/buildId"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "update2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "pullRequest": {
                    "properties": {
                      "createOnSuccess": {
                        "type": "boolean"
                      },
                      "mergeOnSuccess": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.update({ buildId }, body)"
          }
        ]
      }
    },
    "/builds/{serviceId}/": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/serviceId"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "buildByService1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "buildFlags": {
                    "properties": {
                      "nocache": {
                        "default": false,
                        "description": "use docker cache",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "buildByService",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.buildByService({ serviceId }, body)"
          }
        ]
      }
    },
    "/clusters": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "clusters"
        ],
        "operationId": "getAll4",
        "parameters": [],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.clusters.getAll()"
          }
        ]
      }
    },
    "/clusters/{provider}/cluster/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "clusters"
        ],
        "operationId": "delete3",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.clusters.delete({ provider, id })"
          }
        ]
      }
    },
    "/compositions": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "getAll5",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.getAll()"
          }
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "create1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isAdvanced": {
                    "default": false,
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "yamlJson": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.create(body)"
          }
        ],
        "parameters": []
      }
    },
    "/compositions/{id}/run": {
      "post": {
        "parameters": [
          {
            "description": "id or name of a composition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "launch1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "launch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.launch({ id }, body)"
          }
        ]
      }
    },
    "/compositions/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "delete4",
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.delete({ id })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "id or name of a composition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "get3",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.get({ id })"
          }
        ]
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "update3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isAdvanced": {
                    "default": false,
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "yamlJson": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Update the name/variables/body of the composition with the id inserted",
          "required": true
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.update({ id }, body)"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "patch1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.patch({ id }, body)"
          }
        ]
      }
    },
    "/compositions/{id}/duplicate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "duplicate1",
        "summary": "duplicate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.duplicate({ id })"
          }
        ]
      }
    },
    "/contexts": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "getAll6",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "decrypt",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.getAll({ type, decrypt })"
          }
        ]
      }
    },
    "/contexts/": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "create2",
        "parameters": [
          {
            "in": "query",
            "name": "skipValidation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.create({ skipValidation }, body)"
          }
        ]
      }
    },
    "/contexts/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "delete5",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.delete({ name })"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "replace1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "replace",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.replace({ name }, body)"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "patch2",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.patch({ name }, body)"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "get4",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "decrypt",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.get({ name, decrypt })"
          }
        ]
      }
    },
    "/environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "getAll7",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.getAll()"
          }
        ],
        "parameters": []
      }
    },
    "/environments/all/terminate": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "terminateAll1",
        "summary": "terminateAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.terminateAll()"
          }
        ],
        "parameters": []
      }
    },
    "/environments/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "get5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.get({ id })"
          }
        ]
      }
    },
    "/environments/{id}/pause": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "pause1",
        "summary": "pause",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.pause({ id })"
          }
        ]
      }
    },
    "/environments/{id}/rename/{newName}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the environment to rename",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The new name to assign to the environment",
            "in": "path",
            "name": "newName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "rename1",
        "summary": "rename",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.rename({ id, newName })"
          }
        ]
      }
    },
    "/environments/{id}/start": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "start1",
        "summary": "start",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.start({ id })"
          }
        ]
      }
    },
    "/environments/{id}/status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "status1",
        "summary": "status",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.status({ id })"
          }
        ]
      }
    },
    "/environments/{id}/stop": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "stop1",
        "summary": "stop",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.stop({ id })"
          }
        ]
      }
    },
    "/environments/{id}/terminate": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "terminate1",
        "summary": "terminate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.terminate({ id })"
          }
        ]
      }
    },
    "/environments/{id}/unpause": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "unpause1",
        "summary": "unpause",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.unpause({ id })"
          }
        ]
      }
    },
    "/features/{accountId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the account to query for feature availability",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "features"
        ],
        "operationId": "account1",
        "summary": "account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.features.account({ accountId })"
          }
        ]
      }
    },
    "/helm/boards": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "n": {
                      "example": 2,
                      "type": "integer"
                    },
                    "ok": {
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Result of deleting"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "deleteAll1",
        "summary": "deleteAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.deleteAll()"
          }
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "__v": {
                        "type": "number"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "accountId": {
                        "type": "string"
                      },
                      "filter": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Array of Board objects"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "getAll8",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.getAll()"
          }
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "create3",
        "requestBody": {
          "$ref": "#/components/requestBodies/create_boardOptions"
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.create(body)"
          }
        ],
        "parameters": []
      }
    },
    "/helm/boards/name/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardName"
          },
          {
            "description": "include sections in response",
            "in": "query",
            "name": "columns",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "getByName1",
        "summary": "getByName",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.getByName({ name, columns })"
          }
        ]
      }
    },
    "/helm/boards/sections": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Section object"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "create4",
        "requestBody": {
          "$ref": "#/components/requestBodies/create_sectionOptions"
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.create(body)"
          }
        ],
        "parameters": []
      }
    },
    "/helm/boards/sections/reorder": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "reorder1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "[sectionId]": {
                    "example": "<section index>",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "reorder",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.reorder(body)"
          }
        ],
        "parameters": []
      }
    },
    "/helm/boards/sections/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "delete6",
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.delete({ id })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "get6",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.get({ id })"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "patch3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "boardId": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "index": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "section": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.patch({ id }, body)"
          }
        ]
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "update4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "boardId": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "index": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "section": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.update({ id }, body)"
          }
        ]
      }
    },
    "/helm/boards/{boardId}/sections/": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "n": {
                      "example": 2,
                      "type": "integer"
                    },
                    "ok": {
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Result of deleting"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "deleteAll2",
        "summary": "deleteAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.deleteAll({ boardId })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Section object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "getAll9",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.getAll({ boardId })"
          }
        ]
      }
    },
    "/helm/boards/{boardId}/sections/name/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          },
          {
            "$ref": "#/components/parameters/sectionName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "getByName2",
        "summary": "getByName",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.getByName({ boardId, name })"
          }
        ]
      }
    },
    "/helm/boards/{boardId}/sections": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "getAll10",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.getAll({ boardId })"
          }
        ]
      }
    },
    "/helm/boards/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "delete7",
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.delete({ id })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "get7",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.get({ id })"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "patch4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.patch({ id }, body)"
          }
        ]
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "update5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.update({ id }, body)"
          }
        ]
      }
    },
    "/helm/repos": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "create5",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.create(body)"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "getAll11",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.getAll({ query })"
          }
        ]
      }
    },
    "/helm/repos/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "delete8",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.delete({ name })"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "update6",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.update({ name }, body)"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "get8",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.get({ name })"
          }
        ]
      }
    },
    "/hermes/events": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "create6",
        "parameters": [
          {
            "in": "query",
            "name": "public",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.create({ public }, body)"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "getAll12",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "public",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.getAll({ type, kind, filter, public })"
          }
        ]
      }
    },
    "/hermes/events/{event}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "get9",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.get({ event })"
          }
        ]
      }
    },
    "/hermes/events/{event}/{context}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "delete9",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "context",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.delete({ event, context })"
          }
        ]
      }
    },
    "/hermes/triggers": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "getAll13",
        "parameters": [],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getAll()"
          }
        ]
      }
    },
    "/hermes/triggers/event/{event}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "getEventTriggers1",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "getEventTriggers",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getEventTriggers({ event })"
          }
        ]
      }
    },
    "/hermes/triggers/pipeline/{pipeline}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "getPipelineTriggers1",
        "parameters": [
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "getPipelineTriggers",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getPipelineTriggers({ pipeline })"
          }
        ]
      }
    },
    "/hermes/triggers/{event}/{pipeline}": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "create7",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.create({ event, pipeline }, body)"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "delete10",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.delete({ event, pipeline })"
          }
        ]
      }
    },
    "/hermes/types": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.types"
        ],
        "operationId": "getAll14",
        "parameters": [],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.types.getAll()"
          }
        ]
      }
    },
    "/hermes/types/{type}/{kind}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.types"
        ],
        "operationId": "get10",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "kind",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.types.get({ type, kind })"
          }
        ]
      }
    },
    "/hermes/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "getHermesVersion1",
        "parameters": [],
        "summary": "getHermesVersion",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getHermesVersion()"
          }
        ]
      }
    },
    "/images": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getAll15",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "metadata",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "branch",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "imageDisplayNameRegex",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "select",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sha",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getAll({ limit, offset, metadata, tag, type, branch, imageDisplayNameRegex, select, sha })"
          }
        ]
      }
    },
    "/images/external": {
      "parameters": [],
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "addFromExternalSource1",
        "summary": "addFromExternalSource",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.addFromExternalSource()"
          }
        ],
        "parameters": []
      }
    },
    "/images/{id}": {
      "get": {
        "parameters": [
          {
            "description": "id of the Image",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "get11",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.get({ id })"
          }
        ]
      }
    },
    "/images/{id}/tags": {
      "get": {
        "parameters": [
          {
            "description": "name of the image",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getTags1",
        "summary": "getTags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getTags({ id })"
          }
        ]
      }
    },
    "/images/{id}/tag/{tag}": {
      "post": {
        "parameters": [
          {
            "description": "image ObjectId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "tag",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "tag1",
        "summary": "tag",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.tag({ id, tag })"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "description": "image ObjectId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "tag ObjectId",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "untag1",
        "summary": "untag",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.untag({ id, tag })"
          }
        ]
      }
    },
    "/images/{dockerImageId}/metadata": {
      "get": {
        "parameters": [
          {
            "description": "id of the Image (from docker inspect)",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getMetadata1",
        "summary": "getMetadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getMetadata({ dockerImageId })"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "id of the Image (from docker inspect)",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "upsertMetadata1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "CF_QUALITY": {
                    "default": true,
                    "type": "boolean"
                  },
                  "comment": {
                    "default": "image for qa",
                    "type": "string"
                  },
                  "coverage": {
                    "default": "60%",
                    "type": "string"
                  },
                  "failed_tests": {
                    "default": 7,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "upsertMetadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.upsertMetadata({ dockerImageId }, body)"
          }
        ]
      }
    },
    "/images/{dockerImageId}/metadata/{keyName}": {
      "delete": {
        "parameters": [
          {
            "description": "id of the Image from docker inspect",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the metadata key",
            "in": "path",
            "name": "keyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "deleteMetadata1",
        "summary": "deleteMetadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.deleteMetadata({ dockerImageId, keyName })"
          }
        ]
      }
    },
    "/kubernetes/releases/{releaseName}/delete": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.releases"
        ],
        "operationId": "delete11",
        "parameters": [
          {
            "in": "path",
            "name": "releaseName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.releases.delete({ releaseName, selector, tillerNamespace }, body)"
          }
        ]
      }
    },
    "/kubernetes/releases/{releaseName}/test": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.releases"
        ],
        "operationId": "test1",
        "parameters": [
          {
            "in": "path",
            "name": "releaseName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "test",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.releases.test({ releaseName, selector }, body)"
          }
        ]
      }
    },
    "/kubernetes/releases/secrets/imagePullSecret": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "kubernetes"
        ],
        "operationId": "generateImagePullSecret1",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "generateImagePullSecret",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.kubernetes.generateImagePullSecret({ namespace, selector }, body)"
          }
        ]
      }
    },
    "/kubernetes/chart/install": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.charts"
        ],
        "operationId": "install1",
        "parameters": [
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "install",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.charts.install({ selector, tillerNamespace }, body)"
          }
        ]
      }
    },
    "/kubernetes/chart/promote": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.charts"
        ],
        "operationId": "promote1",
        "parameters": [
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "promote",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.charts.promote({ selector, tillerNamespace }, body)"
          }
        ]
      }
    },
    "/nomios/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "getNomiosVersion1",
        "parameters": [],
        "summary": "getNomiosVersion",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getNomiosVersion()"
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "getAll16",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.getAll()"
          }
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "create8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "couponId": {
                    "type": "string"
                  },
                  "plan": {
                    "properties": {
                      "builds": {
                        "default": 2,
                        "type": "integer"
                      },
                      "environments": {
                        "default": 2,
                        "type": "integer"
                      },
                      "id": {
                        "default": "BASIC",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "token": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.create(body)"
          }
        ],
        "parameters": []
      }
    },
    "/payments/plans": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "getPlans1",
        "summary": "getPlans",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.getPlans()"
          }
        ],
        "parameters": []
      }
    },
    "/pipelines": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "labels",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getAll17",
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.getAll({ offset, id, limit, labels })"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "create9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.create(body)"
          }
        ],
        "parameters": []
      }
    },
    "/pipelines/run/{name}": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "run1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "run",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.run({ name }, body)"
          }
        ]
      }
    },
    "/pipelines/yaml/validator": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "validateYaml1",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "validateYaml",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.validateYaml(body)"
          }
        ]
      }
    },
    "/pipelines/{name}": {
      "delete": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "delete12",
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.delete({ name })"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "decryptVariables",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "get12",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.get({ name, decryptVariables })"
          }
        ]
      },
      "put": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "replace2",
        "summary": "replace",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.replace({ name }, body)"
          }
        ]
      }
    },
    "/progress/download/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "download1",
        "summary": "download",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.download({ id })"
          }
        ]
      }
    },
    "/progress/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "get13",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.get({ id })"
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "terminate2",
        "summary": "terminate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.terminate({ id })"
          }
        ]
      }
    },
    "/providers/github/hook": {
      "post": {
        "parameters": [
          {
            "description": "event type of this hook",
            "in": "header",
            "name": "x-github-event",
            "schema": {
              "enum": [
                "push",
                "pull_request"
              ],
              "type": "string"
            }
          },
          {
            "description": "will this hook send notification to related users",
            "in": "header",
            "name": "send-mail-and-update-github",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the id from github ",
            "in": "header",
            "name": "x-github-delivery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the signature from github",
            "in": "header",
            "name": "x-github-signature",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "providers"
        ],
        "operationId": "githubHook1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "commits": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "head_commit": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "repository": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "owner": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "sender": {
                    "properties": {
                      "avatar_url": {
                        "description": "user picture url",
                        "type": "string"
                      },
                      "login": {
                        "description": "github username of the user who initiated the hook",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "githubHook",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.providers.githubHook({ x-github-event, send-mail-and-update-github, x-github-delivery, x-github-signature }, body)"
          }
        ]
      }
    },
    "/registry/auth/token": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "Codefresh Registry"
        ],
        "operationId": "generateCfcrToken1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Description of the token",
          "required": true
        },
        "summary": "generateCfcrToken",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.Codefresh Registry.generateCfcrToken(body)"
          }
        ],
        "parameters": []
      }
    },
    "/repos": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "getAllGitRepos1",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAllGitRepos",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getAllGitRepos({ context })"
          }
        ]
      }
    },
    "/repos/existing": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "getAll18",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "thin",
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getAll({ context, thin })"
          }
        ]
      }
    },
    "/repos/settings/{repoOwner}/{repoName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/repoOwner"
          },
          {
            "$ref": "#/components/parameters/repoName"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "getSettings1",
        "summary": "getSettings",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getSettings({ repoOwner, repoName })"
          }
        ]
      }
    },
    "/repos/{owner}/{repo}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "getGitRepo1",
        "parameters": [
          {
            "in": "path",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "repo",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getGitRepo",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getGitRepo({ owner, repo, context })"
          }
        ]
      }
    },
    "/runtime-environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "getAll19",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.getAll({ limit, offset })"
          }
        ]
      }
    },
    "/runtime-environments/default/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "setDefault2",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "setDefault",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.setDefault({ name })"
          }
        ]
      }
    },
    "/runtime-environments/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "update7",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.update({ name, extend, description }, body)"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "delete13",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.delete({ name, force })"
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "get14",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.get({ name, version, extend, history })"
          }
        ]
      }
    },
    "/runtime/testit": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtime"
        ],
        "operationId": "launch2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "repoData": {
                    "properties": {
                      "url": {
                        "properties": {
                          "https": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "repoName": {
                    "type": "string"
                  },
                  "repoOwner": {
                    "type": "string"
                  },
                  "serviceId": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "launch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtime.launch(body)"
          }
        ],
        "parameters": []
      }
    },
    "/services": {
      "post": {
        "parameters": [
          {
            "description": "The git context name",
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "create10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "serviceDetails": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "scm": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.create({ context }, body)"
          }
        ]
      }
    },
    "/services/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "get15",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.get({ name, context })"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "delete14",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.delete({ name, context })"
          }
        ]
      }
    },
    "/team": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "create11",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Team data",
          "required": true
        },
        "summary": "create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.create(body)"
          }
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "getAll20",
        "parameters": [],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.getAll()"
          }
        ]
      }
    },
    "/team/group/synchronize/name/{name}/type/{type}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "synchronizeClientWithGroup1",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "access_token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "synchronizeClientWithGroup",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.synchronizeClientWithGroup({ name, type, access_token })"
          }
        ]
      }
    },
    "/team/{teamId}/{userId}/assignUserToTeam": {
      "put": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user id for assign",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "addUser1",
        "summary": "addUser",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.addUser({ teamId, userId })"
          }
        ]
      }
    },
    "/team/{teamId}/{userId}/deleteUserFromTeam": {
      "put": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user id for assign",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "removeUser1",
        "summary": "removeUser",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.removeUser({ teamId, userId })"
          }
        ]
      }
    },
    "/team/{userId}/findTeamsByUser": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "getAllByUser1",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "getAllByUser",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.getAllByUser({ userId })"
          }
        ]
      }
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "user structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "get16",
        "summary": "get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.users.get()"
          }
        ],
        "parameters": []
      }
    },
    "/user/changeaccount/{accountId}": {
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "changeAccount1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "changeAccount",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.users.changeAccount({ accountId }, body)"
          }
        ]
      }
    },
    "/user/firebaseAuth": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "token"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "firebase"
        ],
        "operationId": "getToken1",
        "summary": "getToken",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.firebase.getToken()"
          }
        ]
      }
    },
    "/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "getServerVersion1",
        "parameters": [],
        "summary": "getServerVersion",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getServerVersion()"
          }
        ]
      }
    },
    "/workflow": {
      "get": {
        "operationId": "getAll21",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trigger",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "summary": "getAll",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.getAll({ limit, page, status, trigger, pipeline })"
          }
        ]
      }
    },
    "/workflow/{repoOwner}/{repoName}/file": {
      "post": {
        "parameters": [
          {
            "description": "The name of the repo owner",
            "in": "path",
            "name": "repoOwner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the repo",
            "in": "path",
            "name": "repoName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "service1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "revision": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "service",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.service({ repoOwner, repoName }, body)"
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "accountName": {
        "in": "path",
        "name": "accountName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardId": {
        "in": "query",
        "name": "boardId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardIdpath": {
        "description": "id of a board",
        "in": "path",
        "name": "boardId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardName": {
        "description": "name of a board",
        "in": "path",
        "name": "name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "buildId": {
        "description": "id of a build object",
        "in": "path",
        "name": "buildId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "description": "id of an object",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repoName": {
        "description": "repository name",
        "in": "path",
        "name": "repoName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repoOwner": {
        "description": "name of owner of repository",
        "in": "path",
        "name": "repoOwner",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sectionName": {
        "description": "name of a section",
        "in": "path",
        "name": "name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "serviceId": {
        "description": "id of a service object",
        "in": "path",
        "name": "serviceId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "create_boardOptions": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "filter": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "required": true
      },
      "create_sectionOptions": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "boardId": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "section": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "required": true
      },
      "updateAccountAccountdetails": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "settings": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "abac": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "teams": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resource": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "internalApiKey": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "internalApiKey": []
    }
  ]
}
