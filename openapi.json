{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "Codefresh",
      "url": "https://www.codefresh.io"
    },
    "description": "Codefresh API openAPI 3.0 specification",
    "termsOfService": "https://codefresh.io/docs/docs/terms-and-privacy-policy/terms-of-service/",
    "title": "Codefresh API",
    "version": "0.0.1",
    "x-logo": {
      "url": "https://photos.prnewswire.com/prnfull/20160929/413350LOGO?max=200",
      "backgroundColor": "#FFFFFF",
      "altText": "Codefresh"
    }
  },
  "servers": [
    {
      "url": "https://g.codefresh.io/api"
    }
  ],
  "paths": {
    "/abac": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-get-all-rules",
        "summary": "Get all rules",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getAllRules()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "rbac.getAllRules"
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-create-rule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "action": {
                    "type": "string"
                  },
                  "resource": {
                    "type": "string"
                  },
                  "team": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create rule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRule(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "rbac.createRule"
      }
    },
    "/abac/batch": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-create-or-delete-rules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "create": {
                    "items": {
                      "$ref": "#/components/requestBodies/abac"
                    },
                    "type": "array"
                  },
                  "delete": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create or delete rules",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createOrDeleteRules(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "rbac.createOrDeleteRules"
      }
    },
    "/abac/resource/{resource}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the resource",
            "in": "path",
            "name": "resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-get-rules-by-resource",
        "summary": "Get rules by resource",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRulesByResource({ resource })"
          }
        ],
        "x-sdk-interface": "rbac.getRulesByResource"
      }
    },
    "/abac/tags/rule/{rule}": {
      "post": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-update-rule-tags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update rule tags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.updateRuleTags({ rule }, body)"
          }
        ],
        "x-sdk-interface": "rbac.updateRuleTags"
      }
    },
    "/abac/tags/rules": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-create-rules-tags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "rules": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create rules tags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRulesTags(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "rbac.createRulesTags"
      }
    },
    "/abac/team/{team}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "team",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-get-rules-by-team-id",
        "summary": "Get rules by team id",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRulesByTeamId({ team })"
          }
        ],
        "x-sdk-interface": "rbac.getRulesByTeamId"
      }
    },
    "/abac/teamRules": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-create-rules-in-batch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/abac"
              }
            }
          },
          "required": true
        },
        "summary": "Create rules in batch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.createRulesInBatch(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "rbac.createRulesInBatch"
      }
    },
    "/abac/{rule}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-delete-rule",
        "summary": "Delete rule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.deleteRule({ rule })"
          }
        ],
        "x-sdk-interface": "rbac.deleteRule"
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the rule",
            "in": "path",
            "name": "rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "rbac"
        ],
        "operationId": "rbac-get-rule",
        "summary": "Get rule",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.rbac.getRule({ rule })"
          }
        ],
        "x-sdk-interface": "rbac.getRule"
      }
    },
    "/accounts/{accountId}/{userId}": {
      "delete": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "accounts-delete-user-from-account",
        "summary": "Delete user from account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteUserFromAccount({ accountId, userId })"
          }
        ],
        "x-sdk-interface": "accounts.deleteUserFromAccount"
      }
    },
    "/accounts/{accountId}/{userId}/adduser": {
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "accounts-add-existing-user-to-account",
        "summary": "Add existing user to account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addExistingUserToAccount({ accountId, userId })"
          }
        ],
        "x-sdk-interface": "accounts.addExistingUserToAccount"
      }
    },
    "/accounts/{accountId}/{userId}/admin": {
      "delete": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "accounts-delete-admin",
        "summary": "Delete admin",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteAdmin({ accountId, userId })"
          }
        ],
        "x-sdk-interface": "accounts.deleteAdmin"
      },
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "id of an object",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "accounts-aet-as-admin",
        "summary": "Aet as admin",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.aetAsAdmin({ accountId, userId })"
          }
        ],
        "x-sdk-interface": "accounts.aetAsAdmin"
      }
    },
    "/accounts/{id}/adduser": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Adds a not existing user to an account. the provider field is optional and if not provided it will be taken from the account model",
        "operationId": "accounts-add-user-to-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userDetails": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Add user to account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addUserToAccount({ id }, body)"
          }
        ],
        "x-sdk-interface": "accounts.addUserToAccount"
      }
    },
    "/accounts/{id}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet: update the user defined account fields. Receives a settings object (will be defined later)",
        "operationId": "accounts-update-account-public-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "notifications": {
                    "items": {
                      "properties": {
                        "events": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "slack": {
                          "properties": {
                            "uri": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "enum": [
                            "webhook",
                            "slack"
                          ],
                          "type": "string"
                        },
                        "webhook": {
                          "properties": {
                            "method": {
                              "type": "string"
                            },
                            "uri": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update account public settings",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateAccountPublicSettings({ id }, body)"
          }
        ],
        "x-sdk-interface": "accounts.updateAccountPublicSettings"
      }
    },
    "/accounts/{id}/updateuser": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "accounts-update-user-details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update user details",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateUserDetails({ id }, body)"
          }
        ],
        "x-sdk-interface": "accounts.updateUserDetails"
      }
    },
    "/accounts/{id}/users": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Get all users of an account",
        "operationId": "accounts-get-users-for-account",
        "summary": "Get users for account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getUsersForAccount({ id })"
          }
        ],
        "x-sdk-interface": "accounts.getUsersForAccount"
      }
    },
    "/admin/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "get all the accounts in the system",
        "operationId": "accounts-get-all-accounts",
        "summary": "Get all accounts",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getAllAccounts()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "accounts.getAllAccounts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Add new account. Receives an account object ",
        "operationId": "accounts-add-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addAccount(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "accounts.addAccount"
      }
    },
    "/admin/accounts/addpendinguser": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "operationId": "accounts-add-pending-user-without-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "provider": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "userName": {
                    "type": "string"
                  }
                },
                "required": [
                  "userName",
                  "provider"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Add pending user without account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.addPendingUserWithoutAccount(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "accounts.addPendingUserWithoutAccount"
      }
    },
    "/admin/accounts/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet",
        "operationId": "accounts-delete-account",
        "summary": "Delete account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.deleteAccount({ id })"
          }
        ],
        "x-sdk-interface": "accounts.deleteAccount"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Get an account by id",
        "operationId": "accounts-get-by-id",
        "summary": "Get by id",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.getById({ id })"
          }
        ],
        "x-sdk-interface": "accounts.getById"
      }
    },
    "/admin/accounts/{id}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "description": "Not implemented yet: Update the account info that only codefresh admins (codefresh employees, not account admin) can access",
        "operationId": "accounts-update-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.accounts.updateAccount({ id }, body)"
          }
        ],
        "x-sdk-interface": "accounts.updateAccount"
      }
    },
    "/admin/runtime-environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountIds",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getAll({ limit, offset, accountIds })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.getAll"
      }
    },
    "/admin/runtime-environments/account/default/{account}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-set-default-for-account",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Set default for account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.setDefaultForAccount({ account, name })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.setDefaultForAccount"
      }
    },
    "/admin/runtime-environments/account/{account}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-get-by-account",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accountIds",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get by account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getByAccount({ account, limit, offset, accountIds })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.getByAccount"
      }
    },
    "/admin/runtime-environments/default/{plan}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-set-default",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Set default",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.setDefault({ plan, name })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.setDefault"
      }
    },
    "/admin/runtime-environments/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-update-sys-re",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Update sys re",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.updateSysRe({ name, extend, description }, body)"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.updateSysRe"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-delete-sys-re",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete sys re",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.deleteSysRe({ name, force })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.deleteSysRe"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-get-sys-re",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "successors",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get sys re",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.getSysRe({ name, version, extend, history, successors })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.getSysRe"
      }
    },
    "/admin/runtime-environments/{plan}/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-update",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.update({ plan, name, extend, description }, body)"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.update"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-delete",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.delete({ plan, name, force })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.delete"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "sysRuntimeEnvs"
        ],
        "operationId": "sys-runtime-envs-get",
        "parameters": [
          {
            "in": "path",
            "name": "plan",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "successors",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.sysRuntimeEnvs.get({ plan, name, version, extend, history, successors })"
          }
        ],
        "x-sdk-interface": "sysRuntimeEnvs.get"
      }
    },
    "/auth/key": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "tokens-generate",
        "parameters": [
          {
            "in": "query",
            "name": "subjectType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subjectReference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Generate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.generate({ subjectType, subjectReference }, body)"
          }
        ],
        "x-sdk-interface": "tokens.generate"
      }
    },
    "/auth/key/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "tokens-delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.delete({ id })"
          }
        ],
        "x-sdk-interface": "tokens.delete"
      }
    },
    "/auth/keys": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "tokens"
        ],
        "operationId": "tokens-get-all",
        "parameters": [],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.tokens.getAll()"
          }
        ],
        "x-sdk-interface": "tokens.getAll"
      }
    },
    "/builds": {
      "get": {
        "parameters": [
          {
            "description": "account name",
            "in": "query",
            "name": "account",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "repo owner",
            "in": "query",
            "name": "repoOwner",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "repo name",
            "in": "query",
            "name": "repoName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "builds"
        ],
        "operationId": "builds-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.builds.getAll({ account, repoOwner, repoName })"
          }
        ],
        "x-sdk-interface": "builds.getAll"
      }
    },
    "/builds/rebuild/{id}": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "builds"
        ],
        "operationId": "builds-rebuild",
        "summary": "Rebuild",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.builds.rebuild({ id })"
          }
        ],
        "x-sdk-interface": "builds.rebuild"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "workflows-restart",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "summary": "Restart",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.restart({ id })"
          }
        ],
        "x-sdk-interface": "workflows.restart"
      }
    },
    "/builds/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "workflows-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.get({ id })"
          }
        ],
        "x-sdk-interface": "workflows.get"
      }
    },
    "/builds/{buildId}/update": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/buildId"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "workflows-update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "pullRequest": {
                    "properties": {
                      "createOnSuccess": {
                        "type": "boolean"
                      },
                      "mergeOnSuccess": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.update({ buildId }, body)"
          }
        ],
        "x-sdk-interface": "workflows.update"
      }
    },
    "/builds/{serviceId}/": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/serviceId"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "workflows-build-by-service",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "buildFlags": {
                    "properties": {
                      "nocache": {
                        "default": false,
                        "description": "use docker cache",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Build by service",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.buildByService({ serviceId }, body)"
          }
        ],
        "x-sdk-interface": "workflows.buildByService"
      }
    },
    "/clusters": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "clusters"
        ],
        "operationId": "clusters-get-all",
        "parameters": [],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.clusters.getAll()"
          }
        ],
        "x-sdk-interface": "clusters.getAll"
      }
    },
    "/clusters/{provider}/cluster/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "clusters"
        ],
        "operationId": "clusters-delete",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.clusters.delete({ provider, id })"
          }
        ],
        "x-sdk-interface": "clusters.delete"
      }
    },
    "/compositions": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.getAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "compositions.getAll"
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isAdvanced": {
                    "default": false,
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "yamlJson": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "compositions.create"
      }
    },
    "/compositions/{id}/run": {
      "post": {
        "parameters": [
          {
            "description": "id or name of a composition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-launch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Launch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.launch({ id }, body)"
          }
        ],
        "x-sdk-interface": "compositions.launch"
      }
    },
    "/compositions/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-delete",
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.delete({ id })"
          }
        ],
        "x-sdk-interface": "compositions.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "id or name of a composition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.get({ id })"
          }
        ],
        "x-sdk-interface": "compositions.get"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isAdvanced": {
                    "default": false,
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "vars": {
                    "default": [],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "yamlJson": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Update the name/variables/body of the composition with the id inserted",
          "required": true
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.update({ id }, body)"
          }
        ],
        "x-sdk-interface": "compositions.update"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-patch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.patch({ id }, body)"
          }
        ],
        "x-sdk-interface": "compositions.patch"
      }
    },
    "/compositions/{id}/duplicate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "compositions"
        ],
        "operationId": "compositions-duplicate",
        "summary": "Duplicate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.compositions.duplicate({ id })"
          }
        ],
        "x-sdk-interface": "compositions.duplicate"
      }
    },
    "/contexts": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "decrypt",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.getAll({ type, decrypt })"
          }
        ],
        "x-sdk-interface": "contexts.getAll"
      }
    },
    "/contexts/": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-create",
        "parameters": [
          {
            "in": "query",
            "name": "skipValidation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.create({ skipValidation }, body)"
          }
        ],
        "x-sdk-interface": "contexts.create"
      }
    },
    "/contexts/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.delete({ name })"
          }
        ],
        "x-sdk-interface": "contexts.delete"
      },
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-replace",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Replace",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.replace({ name }, body)"
          }
        ],
        "x-sdk-interface": "contexts.replace"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-patch",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.patch({ name }, body)"
          }
        ],
        "x-sdk-interface": "contexts.patch"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "contexts"
        ],
        "operationId": "contexts-get",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "decrypt",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.contexts.get({ name, decrypt })"
          }
        ],
        "x-sdk-interface": "contexts.get"
      }
    },
    "/environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.getAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "envs.getAll"
      }
    },
    "/environments/all/terminate": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-terminate-all",
        "summary": "Terminate all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.terminateAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "envs.terminateAll"
      }
    },
    "/environments/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.get({ id })"
          }
        ],
        "x-sdk-interface": "envs.get"
      }
    },
    "/environments/{id}/pause": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-pause",
        "summary": "Pause",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.pause({ id })"
          }
        ],
        "x-sdk-interface": "envs.pause"
      }
    },
    "/environments/{id}/rename/{newName}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the environment to rename",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The new name to assign to the environment",
            "in": "path",
            "name": "newName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-rename",
        "summary": "Rename",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.rename({ id, newName })"
          }
        ],
        "x-sdk-interface": "envs.rename"
      }
    },
    "/environments/{id}/start": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-start",
        "summary": "Start",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.start({ id })"
          }
        ],
        "x-sdk-interface": "envs.start"
      }
    },
    "/environments/{id}/status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-status",
        "summary": "Status",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.status({ id })"
          }
        ],
        "x-sdk-interface": "envs.status"
      }
    },
    "/environments/{id}/stop": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-stop",
        "summary": "Stop",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.stop({ id })"
          }
        ],
        "x-sdk-interface": "envs.stop"
      }
    },
    "/environments/{id}/terminate": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-terminate",
        "summary": "Terminate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.terminate({ id })"
          }
        ],
        "x-sdk-interface": "envs.terminate"
      }
    },
    "/environments/{id}/unpause": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "envs"
        ],
        "operationId": "envs-unpause",
        "summary": "Unpause",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.envs.unpause({ id })"
          }
        ],
        "x-sdk-interface": "envs.unpause"
      }
    },
    "/features/{accountId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the account to query for feature availability",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "features"
        ],
        "operationId": "features-account",
        "summary": "Account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.features.account({ accountId })"
          }
        ],
        "x-sdk-interface": "features.account"
      }
    },
    "/helm/boards": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "n": {
                      "example": 2,
                      "type": "integer"
                    },
                    "ok": {
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Result of deleting"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-delete-all",
        "summary": "Delete all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.deleteAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "helm.boards.deleteAll"
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "properties": {
                      "__v": {
                        "type": "number"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "accountId": {
                        "type": "string"
                      },
                      "filter": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Array of Board objects"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.getAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "helm.boards.getAll"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-create",
        "requestBody": {
          "$ref": "#/components/requestBodies/create_boardOptions"
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "helm.boards.create"
      }
    },
    "/helm/boards/name/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardName"
          },
          {
            "description": "include sections in response",
            "in": "query",
            "name": "columns",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-get-by-name",
        "summary": "Get by name",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.getByName({ name, columns })"
          }
        ],
        "x-sdk-interface": "helm.boards.getByName"
      }
    },
    "/helm/boards/sections": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Section object"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-create",
        "requestBody": {
          "$ref": "#/components/requestBodies/create_sectionOptions"
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "helm.sections.create"
      }
    },
    "/helm/boards/sections/reorder": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-reorder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "[sectionId]": {
                    "example": "<section index>",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Reorder",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.reorder(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "helm.sections.reorder"
      }
    },
    "/helm/boards/sections/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-delete",
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.delete({ id })"
          }
        ],
        "x-sdk-interface": "helm.sections.delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.get({ id })"
          }
        ],
        "x-sdk-interface": "helm.sections.get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "boardId": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "index": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "section": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.patch({ id }, body)"
          }
        ],
        "x-sdk-interface": "helm.sections.patch"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "boardId": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "index": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "section": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.update({ id }, body)"
          }
        ],
        "x-sdk-interface": "helm.sections.update"
      }
    },
    "/helm/boards/{boardId}/sections": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "n": {
                      "example": 2,
                      "type": "integer"
                    },
                    "ok": {
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Result of deleting"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-delete-all",
        "summary": "Delete all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.deleteAll({ boardId })"
          }
        ],
        "x-sdk-interface": "helm.sections.deleteAll"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "boardId": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "section": {
                      "type": "string"
                    },
                    "type": {
                      "example": "Helm",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Section object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.getAll({ boardId })"
          }
        ],
        "x-sdk-interface": "helm.sections.getAll"
      }
    },
    "/helm/boards/{boardId}/sections/name/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/boardIdpath"
          },
          {
            "$ref": "#/components/parameters/sectionName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.sections"
        ],
        "operationId": "helm-sections-get-by-name",
        "summary": "Get by name",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.sections.getByName({ boardId, name })"
          }
        ],
        "x-sdk-interface": "helm.sections.getByName"
      }
    },
    "/helm/boards/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-delete",
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.delete({ id })"
          }
        ],
        "x-sdk-interface": "helm.boards.delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.get({ id })"
          }
        ],
        "x-sdk-interface": "helm.boards.get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Patch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.patch({ id }, body)"
          }
        ],
        "x-sdk-interface": "helm.boards.patch"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "__v": {
                      "type": "number"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Board object"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Error",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.boards"
        ],
        "operationId": "helm-boards-update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filter": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.boards.update({ id }, body)"
          }
        ],
        "x-sdk-interface": "helm.boards.update"
      }
    },
    "/helm/repos": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "helm-repos-create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.create(body)"
          }
        ],
        "x-sdk-interface": "helm.repos.create"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "helm-repos-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.getAll({ query })"
          }
        ],
        "x-sdk-interface": "helm.repos.getAll"
      }
    },
    "/helm/repos/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "helm-repos-delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.delete({ name })"
          }
        ],
        "x-sdk-interface": "helm.repos.delete"
      },
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "helm-repos-update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.update({ name }, body)"
          }
        ],
        "x-sdk-interface": "helm.repos.update"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.repos"
        ],
        "operationId": "helm-repos-get",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.repos.get({ name })"
          }
        ],
        "x-sdk-interface": "helm.repos.get"
      }
    },
    "/hermes/events": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "triggers-events-create",
        "parameters": [
          {
            "in": "query",
            "name": "public",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.create({ public }, body)"
          }
        ],
        "x-sdk-interface": "triggers.events.create"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "triggers-events-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "public",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.getAll({ type, kind, filter, public })"
          }
        ],
        "x-sdk-interface": "triggers.events.getAll"
      }
    },
    "/hermes/events/{event}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "triggers-events-get",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.get({ event })"
          }
        ],
        "x-sdk-interface": "triggers.events.get"
      }
    },
    "/hermes/events/{event}/{context}": {
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.events"
        ],
        "operationId": "triggers-events-delete",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "context",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.events.delete({ event, context })"
          }
        ],
        "x-sdk-interface": "triggers.events.delete"
      }
    },
    "/hermes/triggers": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "triggers-get-all",
        "parameters": [],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getAll()"
          }
        ],
        "x-sdk-interface": "triggers.getAll"
      }
    },
    "/hermes/triggers/event/{event}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "triggers-get-event-triggers",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get event triggers",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getEventTriggers({ event })"
          }
        ],
        "x-sdk-interface": "triggers.getEventTriggers"
      }
    },
    "/hermes/triggers/pipeline/{pipeline}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "triggers-get-pipeline-triggers",
        "parameters": [
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get pipeline triggers",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.getPipelineTriggers({ pipeline })"
          }
        ],
        "x-sdk-interface": "triggers.getPipelineTriggers"
      }
    },
    "/hermes/triggers/{event}/{pipeline}": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "triggers-create",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.create({ event, pipeline }, body)"
          }
        ],
        "x-sdk-interface": "triggers.create"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers"
        ],
        "operationId": "triggers-delete",
        "parameters": [
          {
            "in": "path",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "pipeline",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.delete({ event, pipeline })"
          }
        ],
        "x-sdk-interface": "triggers.delete"
      }
    },
    "/hermes/types": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.types"
        ],
        "operationId": "triggers-types-get-all",
        "parameters": [],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.types.getAll()"
          }
        ],
        "x-sdk-interface": "triggers.types.getAll"
      }
    },
    "/hermes/types/{type}/{kind}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "triggers.types"
        ],
        "operationId": "triggers-types-get",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "kind",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.triggers.types.get({ type, kind })"
          }
        ],
        "x-sdk-interface": "triggers.types.get"
      }
    },
    "/hermes/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "version-get-hermes-version",
        "parameters": [],
        "summary": "Get hermes version",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getHermesVersion()"
          }
        ],
        "x-sdk-interface": "version.getHermesVersion"
      }
    },
    "/images": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "metadata",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "branch",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "imageDisplayNameRegex",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "select",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sha",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getAll({ limit, offset, metadata, tag, type, branch, imageDisplayNameRegex, select, sha })"
          }
        ],
        "x-sdk-interface": "images.getAll"
      }
    },
    "/images/external": {
      "parameters": [],
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-add-from-external-source",
        "summary": "Add from external source",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.addFromExternalSource()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "images.addFromExternalSource"
      }
    },
    "/images/{id}": {
      "get": {
        "parameters": [
          {
            "description": "id of the Image",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.get({ id })"
          }
        ],
        "x-sdk-interface": "images.get"
      }
    },
    "/images/{id}/tags": {
      "get": {
        "parameters": [
          {
            "description": "name of the image",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-get-tags",
        "summary": "Get tags",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getTags({ id })"
          }
        ],
        "x-sdk-interface": "images.getTags"
      }
    },
    "/images/{id}/tag/{tag}": {
      "post": {
        "parameters": [
          {
            "description": "image ObjectId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "tag",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-tag",
        "summary": "Tag",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.tag({ id, tag })"
          }
        ],
        "x-sdk-interface": "images.tag"
      },
      "delete": {
        "parameters": [
          {
            "description": "image ObjectId",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "tag ObjectId",
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-untag",
        "summary": "Untag",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.untag({ id, tag })"
          }
        ],
        "x-sdk-interface": "images.untag"
      }
    },
    "/images/{dockerImageId}/metadata": {
      "get": {
        "parameters": [
          {
            "description": "id of the Image (from docker inspect)",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-get-metadata",
        "summary": "Get metadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.getMetadata({ dockerImageId })"
          }
        ],
        "x-sdk-interface": "images.getMetadata"
      },
      "post": {
        "parameters": [
          {
            "description": "id of the Image (from docker inspect)",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-upsert-metadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "CF_QUALITY": {
                    "default": true,
                    "type": "boolean"
                  },
                  "comment": {
                    "default": "image for qa",
                    "type": "string"
                  },
                  "coverage": {
                    "default": "60%",
                    "type": "string"
                  },
                  "failed_tests": {
                    "default": 7,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Upsert metadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.upsertMetadata({ dockerImageId }, body)"
          }
        ],
        "x-sdk-interface": "images.upsertMetadata"
      }
    },
    "/images/{dockerImageId}/metadata/{keyName}": {
      "delete": {
        "parameters": [
          {
            "description": "id of the Image from docker inspect",
            "in": "path",
            "name": "dockerImageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the metadata key",
            "in": "path",
            "name": "keyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "images-delete-metadata",
        "summary": "Delete metadata",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.images.deleteMetadata({ dockerImageId, keyName })"
          }
        ],
        "x-sdk-interface": "images.deleteMetadata"
      }
    },
    "/kubernetes/releases/{releaseName}/delete": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.releases"
        ],
        "operationId": "helm-releases-delete",
        "parameters": [
          {
            "in": "path",
            "name": "releaseName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.releases.delete({ releaseName, selector, tillerNamespace }, body)"
          }
        ],
        "x-sdk-interface": "helm.releases.delete"
      }
    },
    "/kubernetes/releases/{releaseName}/test": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.releases"
        ],
        "operationId": "helm-releases-test",
        "parameters": [
          {
            "in": "path",
            "name": "releaseName",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Test",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.releases.test({ releaseName, selector }, body)"
          }
        ],
        "x-sdk-interface": "helm.releases.test"
      }
    },
    "/kubernetes/releases/secrets/imagePullSecret": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "kubernetes"
        ],
        "operationId": "kubernetes-generate-image-pull-secret",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Generate image pull secret",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.kubernetes.generateImagePullSecret({ namespace, selector }, body)"
          }
        ],
        "x-sdk-interface": "kubernetes.generateImagePullSecret"
      }
    },
    "/kubernetes/chart/install": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.charts"
        ],
        "operationId": "helm-charts-install",
        "parameters": [
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Install",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.charts.install({ selector, tillerNamespace }, body)"
          }
        ],
        "x-sdk-interface": "helm.charts.install"
      }
    },
    "/kubernetes/chart/promote": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "helm.charts"
        ],
        "operationId": "helm-charts-promote",
        "parameters": [
          {
            "in": "query",
            "name": "selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tillerNamespace",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Promote",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.helm.charts.promote({ selector, tillerNamespace }, body)"
          }
        ],
        "x-sdk-interface": "helm.charts.promote"
      }
    },
    "/nomios/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "version-get-nomios-version",
        "parameters": [],
        "summary": "Get nomios version",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getNomiosVersion()"
          }
        ],
        "x-sdk-interface": "version.getNomiosVersion"
      }
    },
    "/payments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "payments-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.getAll()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "payments.getAll"
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "payments-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "couponId": {
                    "type": "string"
                  },
                  "plan": {
                    "properties": {
                      "builds": {
                        "default": 2,
                        "type": "integer"
                      },
                      "environments": {
                        "default": 2,
                        "type": "integer"
                      },
                      "id": {
                        "default": "BASIC",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "token": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "payments.create"
      }
    },
    "/payments/plans": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "payments"
        ],
        "operationId": "payments-get-plans",
        "summary": "Get plans",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.payments.getPlans()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "payments.getPlans"
      }
    },
    "/pipelines": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "labels",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "pipelines-get-all",
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.getAll({ offset, id, limit, labels })"
          }
        ],
        "x-sdk-interface": "pipelines.getAll"
      },
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "pipelines.create"
      }
    },
    "/pipelines/run/{name}": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-run",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Run",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.run({ name }, body)"
          }
        ],
        "x-sdk-interface": "pipelines.run"
      }
    },
    "/pipelines/yaml/validator": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-validate-yaml",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Validate yaml",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.validateYaml(body)"
          }
        ],
        "x-sdk-interface": "pipelines.validateYaml"
      }
    },
    "/pipelines/{name}": {
      "delete": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-delete",
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.delete({ name })"
          }
        ],
        "x-sdk-interface": "pipelines.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "decryptVariables",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.get({ name, decryptVariables })"
          }
        ],
        "x-sdk-interface": "pipelines.get"
      },
      "put": {
        "parameters": [
          {
            "description": "Name of pipeline",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "pipelines"
        ],
        "operationId": "pipelines-replace",
        "summary": "Replace",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.pipelines.replace({ name }, body)"
          }
        ],
        "x-sdk-interface": "pipelines.replace"
      }
    },
    "/progress/download/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "progress-download",
        "summary": "Download",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.download({ id })"
          }
        ],
        "x-sdk-interface": "progress.download"
      }
    },
    "/progress/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "progress-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.get({ id })"
          }
        ],
        "x-sdk-interface": "progress.get"
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "progress structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "progress"
        ],
        "operationId": "progress-terminate",
        "summary": "Terminate",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.progress.terminate({ id })"
          }
        ],
        "x-sdk-interface": "progress.terminate"
      }
    },
    "/providers/github/hook": {
      "post": {
        "parameters": [
          {
            "description": "event type of this hook",
            "in": "header",
            "name": "x-github-event",
            "schema": {
              "enum": [
                "push",
                "pull_request"
              ],
              "type": "string"
            }
          },
          {
            "description": "will this hook send notification to related users",
            "in": "header",
            "name": "send-mail-and-update-github",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the id from github ",
            "in": "header",
            "name": "x-github-delivery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the signature from github",
            "in": "header",
            "name": "x-github-signature",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "providers"
        ],
        "operationId": "providers-github-hook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "commits": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "head_commit": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "repository": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "owner": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "sender": {
                    "properties": {
                      "avatar_url": {
                        "description": "user picture url",
                        "type": "string"
                      },
                      "login": {
                        "description": "github username of the user who initiated the hook",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Github hook",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.providers.githubHook({ x-github-event, send-mail-and-update-github, x-github-delivery, x-github-signature }, body)"
          }
        ],
        "x-sdk-interface": "providers.githubHook"
      }
    },
    "/registry/auth/token": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "Codefresh Registry"
        ],
        "operationId": "codefresh-registry-generate-cfcr-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Description of the token",
          "required": true
        },
        "summary": "Generate cfcr token",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.Codefresh Registry.generateCfcrToken(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "Codefresh Registry.generateCfcrToken"
      }
    },
    "/repos": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-get-all-git-repos",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all git repos",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getAllGitRepos({ context })"
          }
        ],
        "x-sdk-interface": "repos.getAllGitRepos"
      }
    },
    "/repos/existing": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "thin",
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getAll({ context, thin })"
          }
        ],
        "x-sdk-interface": "repos.getAll"
      }
    },
    "/repos/settings/{repoOwner}/{repoName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/repoOwner"
          },
          {
            "$ref": "#/components/parameters/repoName"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-get-settings",
        "summary": "Get settings",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getSettings({ repoOwner, repoName })"
          }
        ],
        "x-sdk-interface": "repos.getSettings"
      }
    },
    "/repos/{owner}/{repo}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-get-git-repo",
        "parameters": [
          {
            "in": "path",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "repo",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get git repo",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.getGitRepo({ owner, repo, context })"
          }
        ],
        "x-sdk-interface": "repos.getGitRepo"
      }
    },
    "/runtime-environments": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "runtime-envs-get-all",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.getAll({ limit, offset })"
          }
        ],
        "x-sdk-interface": "runtimeEnvs.getAll"
      }
    },
    "/runtime-environments/default/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "runtime-envs-set-default",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Set default",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.setDefault({ name })"
          }
        ],
        "x-sdk-interface": "runtimeEnvs.setDefault"
      }
    },
    "/runtime-environments/{name}": {
      "put": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "runtime-envs-update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Update",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.update({ name, extend, description }, body)"
          }
        ],
        "x-sdk-interface": "runtimeEnvs.update"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "runtime-envs-delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.delete({ name, force })"
          }
        ],
        "x-sdk-interface": "runtimeEnvs.delete"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtimeEnvs"
        ],
        "operationId": "runtime-envs-get",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extend",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "history",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtimeEnvs.get({ name, version, extend, history })"
          }
        ],
        "x-sdk-interface": "runtimeEnvs.get"
      }
    },
    "/runtime/testit": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "runtime"
        ],
        "operationId": "runtime-launch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "repoData": {
                    "properties": {
                      "url": {
                        "properties": {
                          "https": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "repoName": {
                    "type": "string"
                  },
                  "repoOwner": {
                    "type": "string"
                  },
                  "serviceId": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Launch",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.runtime.launch(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "runtime.launch"
      }
    },
    "/services": {
      "post": {
        "parameters": [
          {
            "description": "The git context name",
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "serviceDetails": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "scm": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.create({ context }, body)"
          }
        ],
        "x-sdk-interface": "repos.create"
      }
    },
    "/services/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-get",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.get({ name, context })"
          }
        ],
        "x-sdk-interface": "repos.get"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "repos"
        ],
        "operationId": "repos-delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.repos.delete({ name, context })"
          }
        ],
        "x-sdk-interface": "repos.delete"
      }
    },
    "/team": {
      "post": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Team data",
          "required": true
        },
        "summary": "Create",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.create(body)"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "teams.create"
      },
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-get-all",
        "parameters": [],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.getAll()"
          }
        ],
        "x-sdk-interface": "teams.getAll"
      }
    },
    "/team/group/synchronize/name/{name}/type/{type}": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-synchronize-client-with-group",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "access_token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Synchronize client with group",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.synchronizeClientWithGroup({ name, type, access_token })"
          }
        ],
        "x-sdk-interface": "teams.synchronizeClientWithGroup"
      }
    },
    "/team/{teamId}/{userId}/assignUserToTeam": {
      "put": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user id for assign",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-add-user",
        "summary": "Add user",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.addUser({ teamId, userId })"
          }
        ],
        "x-sdk-interface": "teams.addUser"
      }
    },
    "/team/{teamId}/{userId}/deleteUserFromTeam": {
      "put": {
        "parameters": [
          {
            "description": "The id of the team",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user id for assign",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-remove-user",
        "summary": "Remove user",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.removeUser({ teamId, userId })"
          }
        ],
        "x-sdk-interface": "teams.removeUser"
      }
    },
    "/team/{userId}/findTeamsByUser": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "teams"
        ],
        "operationId": "teams-get-all-by-user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get all by user",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.teams.getAllByUser({ userId })"
          }
        ],
        "x-sdk-interface": "teams.getAllByUser"
      }
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "user structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "users-get",
        "summary": "Get",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.users.get()"
          }
        ],
        "parameters": [],
        "x-sdk-interface": "users.get"
      }
    },
    "/user/changeaccount/{accountId}": {
      "post": {
        "parameters": [
          {
            "description": "id of an object",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user structure"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "users-change-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "summary": "Change account",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.users.changeAccount({ accountId }, body)"
          }
        ],
        "x-sdk-interface": "users.changeAccount"
      }
    },
    "/user/firebaseAuth": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "token"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "firebase"
        ],
        "operationId": "firebase-get-token",
        "summary": "Get token",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.firebase.getToken()"
          }
        ],
        "x-sdk-interface": "firebase.getToken"
      }
    },
    "/version": {
      "get": {
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "version"
        ],
        "operationId": "version-get-server-version",
        "parameters": [],
        "summary": "Get server version",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.version.getServerVersion()"
          }
        ],
        "x-sdk-interface": "version.getServerVersion"
      }
    },
    "/workflow": {
      "get": {
        "operationId": "workflows-get-all",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trigger",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "summary": "Get all",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.getAll({ limit, page, status, trigger, pipeline })"
          }
        ],
        "x-sdk-interface": "workflows.getAll"
      }
    },
    "/workflow/{repoOwner}/{repoName}/file": {
      "post": {
        "parameters": [
          {
            "description": "The name of the repo owner",
            "in": "path",
            "name": "repoOwner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the repo",
            "in": "path",
            "name": "repoName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "internalApiKey": []
          }
        ],
        "tags": [
          "workflows"
        ],
        "operationId": "workflows-service",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "branch": {
                    "type": "string"
                  },
                  "revision": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Service",
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "sdk.workflows.service({ repoOwner, repoName }, body)"
          }
        ],
        "x-sdk-interface": "workflows.service"
      }
    }
  },
  "components": {
    "parameters": {
      "accountName": {
        "in": "path",
        "name": "accountName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardId": {
        "in": "query",
        "name": "boardId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardIdpath": {
        "description": "id of a board",
        "in": "path",
        "name": "boardId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "boardName": {
        "description": "name of a board",
        "in": "path",
        "name": "name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "buildId": {
        "description": "id of a build object",
        "in": "path",
        "name": "buildId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "description": "id of an object",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repoName": {
        "description": "repository name",
        "in": "path",
        "name": "repoName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repoOwner": {
        "description": "name of owner of repository",
        "in": "path",
        "name": "repoOwner",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sectionName": {
        "description": "name of a section",
        "in": "path",
        "name": "name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "serviceId": {
        "description": "id of a service object",
        "in": "path",
        "name": "serviceId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "create_boardOptions": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "filter": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "required": true
      },
      "create_sectionOptions": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "boardId": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "section": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "required": true
      },
      "updateAccountAccountdetails": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "settings": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "abac": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "teams": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resource": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "internalApiKey": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "internalApiKey": []
    }
  ]
}
